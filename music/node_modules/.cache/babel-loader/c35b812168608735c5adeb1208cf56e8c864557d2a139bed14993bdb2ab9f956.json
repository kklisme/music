{"ast":null,"code":"import { getSongUrl, checkMusic } from \"../../../../../network/playmusic/playmusic.js\";\nimport { getEverySongDetail } from \"../../../../../network/songlistdetail/songlistdetail\";\nexport default {\n  name: \"RecNewSong\",\n  props: {\n    newsong: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      songurl: \"\",\n      song: []\n    };\n  },\n  methods: {\n    playMusic(song) {\n      checkMusic(song.id).then(res => {\n        // 获取歌曲url\n        getSongUrl(song.id).then(res => {\n          this.songurl = res.data.data[0].url;\n          this.$store.dispatch(\"saveSongUrl\", this.songurl);\n        });\n        /* 根据歌曲id获取每首歌的信息*/\n        getEverySongDetail(song.id).then(res => {\n          this.song = res.data.songs[0];\n          // 提交vuex保存当前歌曲详情\n          this.$store.dispatch(\"saveSongDetail\", this.song);\n          // 提交vuex添加到播放列表\n          this.$store.dispatch(\"addPlayinglist\", this.song);\n        });\n        console.log(res);\n      }).catch(err => {\n        this.$message({\n          message: \"暂时无法播放，换首试试\",\n          type: \"warning\",\n          center: true\n        });\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["getSongUrl","checkMusic","getEverySongDetail","name","props","newsong","type","Array","default","data","songurl","song","methods","playMusic","id","then","res","url","$store","dispatch","songs","console","log","catch","err","$message","message","center"],"sources":["src/views/findmusic/discover/Childcomps/RecNewSong.vue"],"sourcesContent":["<template>\n\t<div class=\"rec-newsong\" v-if=\"newsong.length !== 0\">\n\t\t<div class=\"hd\">\n\t\t\t<el-divider content-position=\"left\"><h2>最新音乐</h2></el-divider>\n\t\t</div>\n\t\t<div class=\"bd\">\n\t\t\t<div class=\"item\" v-for=\"(item, index) in newsong\" :key=\"index\" @dblclick=\"playMusic(item)\">\n\t\t\t\t<div class=\"item-img\" @click=\"playMusic(item)\">\n\t\t\t\t\t<img v-lazy=\"item.picUrl+'?param=80y80'\" alt=\"\" />\n\t\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t\t<span class=\"iconfont icon-play1\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-text\">\n\t\t\t\t\t<p class=\"sname\">{{ item.name }}</p>\n\t\t\t\t\t<p class=\"by\">{{ item.song.artists[0].name }}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { getSongUrl, checkMusic } from \"../../../../../network/playmusic/playmusic.js\";\nimport { getEverySongDetail } from \"../../../../../network/songlistdetail/songlistdetail\";\nexport default {\n\tname: \"RecNewSong\",\n\tprops: {\n\t\tnewsong: {\n\t\t\ttype: Array,\n\t\t\tdefault() {\n\t\t\t\treturn [];\n\t\t\t},\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tsongurl: \"\",\n\t\t\tsong: [],\n\t\t};\n\t},\n\tmethods: {\n\t\tplayMusic(song) {\n\t\t\tcheckMusic(song.id)\n\t\t\t\t.then(res => {\n\t\t\t\t\t// 获取歌曲url\n\t\t\t\t\tgetSongUrl(song.id).then(res => {\n\t\t\t\t\t\tthis.songurl = res.data.data[0].url;\n\t\t\t\t\t\tthis.$store.dispatch(\"saveSongUrl\", this.songurl);\n\t\t\t\t\t});\n\t\t\t\t\t/* 根据歌曲id获取每首歌的信息*/\n\t\t\t\t\tgetEverySongDetail(song.id).then(res => {\n\t\t\t\t\t\tthis.song = res.data.songs[0];\n\t\t\t\t\t\t// 提交vuex保存当前歌曲详情\n\t\t\t\t\t\tthis.$store.dispatch(\"saveSongDetail\", this.song);\n\t\t\t\t\t\t// 提交vuex添加到播放列表\n\t\t\t\t\t\tthis.$store.dispatch(\"addPlayinglist\", this.song);\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(res)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.$message({\n\t\t\t\t\t\tmessage: \"暂时无法播放，换首试试\",\n\t\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t});\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.rec-newsong {\n\t.bd {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\twidth: 100%;\n\t\t.item {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\twidth: 33%;\n\t\t\tmargin-bottom: 10px;\n\t\t\t&:hover {\n\t\t\t\tbackground: rgb(245, 245, 245, 0.3);\n\t\t\t}\n\t\t\t.item-img {\n\t\t\t\tposition: relative;\n\t\t\t\tflex: 1;\n\t\t\t\timg {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t.icon {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t.iconfont {\n\t\t\t\t\t\tfont-size: 32px;\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t&:hover {\n\t\t\t\t\t\t\tbackground: rgba(100, 100, 100, 0.7);\n\t\t\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t.item-text {\n\t\t\t\tflex: 4;\n\t\t\t\tpadding-left: 10px;\n\t\t\t\t.sname {\n\t\t\t\t\twidth: 200px;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t}\n\t\t\t\t.by {\n\t\t\t\t\tpadding-top: 5px;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\twhite-space: nowrap;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n"],"mappings":"AAuBA,SAAAA,UAAA,EAAAC,UAAA;AACA,SAAAC,kBAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAF,IAAA;MACAV,UAAA,CAAAU,IAAA,CAAAG,EAAA,EACAC,IAAA,CAAAC,GAAA;QACA;QACAhB,UAAA,CAAAW,IAAA,CAAAG,EAAA,EAAAC,IAAA,CAAAC,GAAA;UACA,KAAAN,OAAA,GAAAM,GAAA,CAAAP,IAAA,CAAAA,IAAA,IAAAQ,GAAA;UACA,KAAAC,MAAA,CAAAC,QAAA,qBAAAT,OAAA;QACA;QACA;QACAR,kBAAA,CAAAS,IAAA,CAAAG,EAAA,EAAAC,IAAA,CAAAC,GAAA;UACA,KAAAL,IAAA,GAAAK,GAAA,CAAAP,IAAA,CAAAW,KAAA;UACA;UACA,KAAAF,MAAA,CAAAC,QAAA,wBAAAR,IAAA;UACA;UACA,KAAAO,MAAA,CAAAC,QAAA,wBAAAR,IAAA;QACA;QACAU,OAAA,CAAAC,GAAA,CAAAN,GAAA;MACA,GACAO,KAAA,CAAAC,GAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACApB,IAAA;UACAqB,MAAA;QACA;QACAN,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}