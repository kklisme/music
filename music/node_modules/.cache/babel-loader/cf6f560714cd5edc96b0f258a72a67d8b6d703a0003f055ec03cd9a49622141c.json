{"ast":null,"code":"/* vuex */\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"app_Floatlyric\",\n  data() {\n    return {\n      currentRow: \"\",\n      //当前播放的歌词行数\n      isShowBg: true\n    };\n  },\n  computed: {\n    ...mapGetters([\"currentLyric\", \"currentSecond\"])\n  },\n  methods: {\n    //   关闭悬浮歌词\n    closeFloatLyric() {\n      this.$store.commit(\"showFloatLyric\");\n    },\n    // 拖动悬浮歌词\n    dragLyric(e) {\n      // 先获取鼠标在盒子内的坐标\n      // 鼠标按下，要得到一开始鼠标在盒子的坐标。\n      let x = e.pageX - this.$refs.lyric.offsetLeft;\n      let y = e.pageY - this.$refs.lyric.offsetTop;\n      let lyric = this.$refs.lyric;\n      // 鼠标移动只有鼠标按下才能触发  移动事件写到按下事件里面\n      document.addEventListener(\"mousemove\", move);\n      function move(e) {\n        // 鼠标移动，就让歌词框的坐标 设置为 :鼠标一开始坐标 减去鼠标在盒子坐标即可\n        lyric.style.left = e.pageX - x + \"px\";\n        lyric.style.top = e.pageY - y + \"px\";\n      }\n      // 鼠标松开，就停止拖拽，让鼠标移动事件解除\n      document.addEventListener(\"mouseup\", function () {\n        document.removeEventListener(\"mousemove\", move);\n      });\n    }\n  },\n  watch: {\n    // 监听当前时间的变化 通过修改position的top值实现滚动\n    currentSecond(currentSecond) {\n      this.currentLyric.forEach((item, index) => {\n        if (Math.ceil(currentSecond) >= item.time) {\n          this.$refs.floatLyric.style.top = -index * 40 + \"px\";\n          this.currentRow = index; //用于判断当前歌词高亮显示\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","currentRow","isShowBg","computed","methods","closeFloatLyric","$store","commit","dragLyric","e","x","pageX","$refs","lyric","offsetLeft","y","pageY","offsetTop","document","addEventListener","move","style","left","top","removeEventListener","watch","currentSecond","currentLyric","forEach","item","index","Math","ceil","time","floatLyric"],"sources":["src/components/content/player/FloatLyric.vue"],"sourcesContent":["<template>\n\t<div class=\"float-lyric\" :class=\"{ bg: isShowBg }\" ref=\"lyric\" @mousedown=\"dragLyric\" @mouseover=\"isShowBg = true\" @mouseleave=\"isShowBg = false\">\n\t\t<div class=\"lyric\">\n\t\t\t<!-- 关闭按钮 -->\n\t\t\t<div class=\"close\" v-show=\"isShowBg\">\n\t\t\t\t<span class=\"iconfont icon-guanbi1\" @click=\"closeFloatLyric\"></span>\n\t\t\t</div>\n\t\t\t<!-- 没有歌词时 -->\n\t\t\t<div class=\"nolyric\" v-if=\"currentLyric.length == 0\">暂无歌词</div>\n\t\t\t<!-- 有歌词时 -->\n\t\t\t<div id=\"floatLyric\" ref=\"floatLyric\" v-else>\n\t\t\t\t<div class=\"lyricRow\" v-for=\"(item, index) in currentLyric\" :key=\"index\" :class=\"{ currentActive: currentRow == index }\">\n\t\t\t\t\t<span>{{ item.text.trim() }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n/* vuex */\nimport { mapGetters } from \"vuex\";\nexport default {\n\tname: \"app_Floatlyric\",\n\tdata() {\n\t\treturn {\n\t\t\tcurrentRow: \"\", //当前播放的歌词行数\n\t\t\tisShowBg: true,\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\"currentLyric\", \"currentSecond\"]),\n\t},\n\tmethods: {\n\t\t//   关闭悬浮歌词\n\t\tcloseFloatLyric() {\n\t\t\tthis.$store.commit(\"showFloatLyric\");\n\t\t},\n\t\t// 拖动悬浮歌词\n\t\tdragLyric(e) {\n\t\t\t// 先获取鼠标在盒子内的坐标\n\t\t\t// 鼠标按下，要得到一开始鼠标在盒子的坐标。\n\t\t\tlet x = e.pageX - this.$refs.lyric.offsetLeft;\n\t\t\tlet y = e.pageY - this.$refs.lyric.offsetTop;\n\t\t\tlet lyric = this.$refs.lyric;\n\t\t\t// 鼠标移动只有鼠标按下才能触发  移动事件写到按下事件里面\n\t\t\tdocument.addEventListener(\"mousemove\", move);\n\t\t\tfunction move(e) {\n\t\t\t\t// 鼠标移动，就让歌词框的坐标 设置为 :鼠标一开始坐标 减去鼠标在盒子坐标即可\n\t\t\t\tlyric.style.left = e.pageX - x + \"px\";\n\t\t\t\tlyric.style.top = e.pageY - y + \"px\";\n\t\t\t}\n\t\t\t// 鼠标松开，就停止拖拽，让鼠标移动事件解除\n\t\t\tdocument.addEventListener(\"mouseup\", function () {\n\t\t\t\tdocument.removeEventListener(\"mousemove\", move);\n\t\t\t});\n\t\t},\n\t},\n\twatch: {\n\t\t// 监听当前时间的变化 通过修改position的top值实现滚动\n\t\tcurrentSecond(currentSecond) {\n\t\t\tthis.currentLyric.forEach((item, index) => {\n\t\t\t\tif (Math.ceil(currentSecond) >= item.time) {\n\t\t\t\t\tthis.$refs.floatLyric.style.top = -index * 40 + \"px\";\n\t\t\t\t\tthis.currentRow = index; //用于判断当前歌词高亮显示\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.float-lyric {\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 88%;\n\ttransform: translateX(-50%);\n\tcursor: move;\n\tz-index: 1100;\n}\n.bg {\n\tbackground: rgba(100, 100, 100, 0.3);\n}\n.lyric {\n\tposition: relative;\n\twidth: 500px;\n\theight: 40px;\n\ttext-align: center;\n\tcolor: #eee;\n\toverflow-y: hidden;\n\t#floatLyric {\n\t\tposition: absolute;\n\t\ttop: 0px;\n\t\twidth: 100%;\n\t\t.lyricRow {\n\t\t\theight: 40px;\n\t\t\tline-height: 40px;\n\t\t\twhite-space: nowrap;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t}\n\t\t.currentActive {\n\t\t\tfont-size: 22px;\n\t\t\tcolor: var(--themeColor);\n\t\t\tfont-weight: 700;\n\t\t}\n\t}\n}\n.close {\n\tposition: absolute;\n\tright: 2px;\n\ttop: 2px;\n\tz-index: 99999;\n\tcursor: pointer;\n\t.icon-guanbi1 {\n\t\tcolor: var(--themeColor);\n\t\tfont-size: 12px;\n\t}\n}\n.nolyric {\n\tfont-size: 18px;\n\tline-height: 35px;\n\tcolor: var(--themeColor);\n}\n</style>\n"],"mappings":"AAoBA;AACA,SAAAA,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAL,UAAA;EACA;EACAM,OAAA;IACA;IACAC,gBAAA;MACA,KAAAC,MAAA,CAAAC,MAAA;IACA;IACA;IACAC,UAAAC,CAAA;MACA;MACA;MACA,IAAAC,CAAA,GAAAD,CAAA,CAAAE,KAAA,QAAAC,KAAA,CAAAC,KAAA,CAAAC,UAAA;MACA,IAAAC,CAAA,GAAAN,CAAA,CAAAO,KAAA,QAAAJ,KAAA,CAAAC,KAAA,CAAAI,SAAA;MACA,IAAAJ,KAAA,QAAAD,KAAA,CAAAC,KAAA;MACA;MACAK,QAAA,CAAAC,gBAAA,cAAAC,IAAA;MACA,SAAAA,KAAAX,CAAA;QACA;QACAI,KAAA,CAAAQ,KAAA,CAAAC,IAAA,GAAAb,CAAA,CAAAE,KAAA,GAAAD,CAAA;QACAG,KAAA,CAAAQ,KAAA,CAAAE,GAAA,GAAAd,CAAA,CAAAO,KAAA,GAAAD,CAAA;MACA;MACA;MACAG,QAAA,CAAAC,gBAAA;QACAD,QAAA,CAAAM,mBAAA,cAAAJ,IAAA;MACA;IACA;EACA;EACAK,KAAA;IACA;IACAC,2BAAA;MACA,KAAAC,YAAA,CAAAC,OAAA,EAAAC,IAAA,EAAAC,KAAA;QACA,IAAAC,IAAA,CAAAC,IAAA,CAAAN,aAAA,KAAAG,IAAA,CAAAI,IAAA;UACA,KAAArB,KAAA,CAAAsB,UAAA,CAAAb,KAAA,CAAAE,GAAA,IAAAO,KAAA;UACA,KAAA7B,UAAA,GAAA6B,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}