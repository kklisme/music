{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* 网络请求 */\nimport { isLikeComment } from \"../../../../network/comment/comment\";\nimport { formatDate } from \"../../../common/formatDate\";\nexport default {\n  name: \"CommentItem\",\n  props: {\n    item: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    commentType: {\n      type: Number\n    },\n    // id:评论的资源id\n    commentresId: {\n      type: [Number, String]\n    }\n  },\n  filters: {\n    showDate(value) {\n      const date = new Date(value);\n      return formatDate(date, \"yyyy-MM-dd   hh:mm:ss\");\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    // 点击用户头像\n    toUserDetail(uid) {\n      this.$router.push(\"/userdetail/\" + uid);\n      // 如果在歌曲详情页点击 需要关闭歌曲详情页\n      this.$emit(\"toUserDetail\");\n    },\n    // 点击回复评论\n    replyComment(item) {\n      let replyInfo = {};\n      replyInfo.commentId = item.commentId;\n      replyInfo.uname = item.user.nickname;\n      this.$emit(\"getReplyComment\", replyInfo);\n    },\n    // 点赞评论\n    isLikeCommentBy(item) {\n      // 先判断登录状态\n      if (!this.$store.state.isLogin) {\n        this.$message({\n          type: \"warning\",\n          message: \"登录后才能点赞\",\n          showClose: true,\n          center: true\n        });\n        return;\n      }\n      let t = this.item.liked ? 0 : 1;\n      // 发送网络请求\n      isLikeComment(this.commentresId, this.commentType, t, item.commentId).then(res => {\n        if (res.data.code === 200) {\n          // this.isLike = !this.isLike;\n          if (t == 0) {\n            this.$message({\n              type: \"success\",\n              message: \"已取消点赞\",\n              center: true\n            });\n            // eslint-disable-next-line vue/no-mutating-props\n            this.item.likedCount = this.item.likedCount - 1;\n            // eslint-disable-next-line vue/no-mutating-props\n            this.item.liked = !this.item.liked;\n          } else {\n            this.$message({\n              type: \"success\",\n              message: \"点赞成功\",\n              center: true\n            });\n            // eslint-disable-next-line vue/no-mutating-props\n            this.item.likedCount = this.item.likedCount + 1;\n            // eslint-disable-next-line vue/no-mutating-props\n            this.item.liked = !this.item.liked;\n          }\n        } else {\n          this.$message.error(\"点赞失败,请稍后重试!\");\n        }\n      }).catch(err => {\n        this.$message.error(err, \"点赞失败,请稍后重试!\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["isLikeComment","formatDate","name","props","item","type","Object","default","commentType","Number","commentresId","String","filters","showDate","value","date","Date","data","methods","toUserDetail","uid","$router","push","$emit","replyComment","replyInfo","commentId","uname","user","nickname","isLikeCommentBy","$store","state","isLogin","$message","message","showClose","center","t","liked","then","res","code","likedCount","error","catch","err"],"sources":["src/components/content/comment/CommentItem.vue"],"sourcesContent":["<template>\n\t<!-- 每一条评论 -->\n\t<div class=\"coment-item\">\n\t\t<div class=\"base-info\">\n\t\t\t<!-- 头像 -->\n\t\t\t<div class=\"avatar\" @click=\"toUserDetail(item.user.userId)\">\n\t\t\t\t<img :src=\"item.user.avatarUrl\" alt=\"\" />\n\t\t\t</div>\n\t\t\t<!-- 右侧内容 -->\n\t\t\t<div class=\"right-info\">\n\t\t\t\t<!-- 评论 -->\n\t\t\t\t<div class=\"content\">\n\t\t\t\t\t<span @click=\"toUserDetail(item.user.userId)\">{{ item.user.nickname }}:</span>\n\t\t\t\t\t{{ item.content }}\n\t\t\t\t</div>\n\t\t\t\t<!-- 被回复的评论 -->\n\t\t\t\t<div class=\"be-replied\" v-if=\"item.beReplied != null && item.beReplied.length != 0\">\n\t\t\t\t\t<div v-for=\"(item2, index2) in item.beReplied\" :key=\"index2\">\n\t\t\t\t\t\t<span @click=\"toUserDetail(item2.user.userId)\">@{{ item2.user.nickname }}:</span>{{ item2.content }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!-- 评论时间 -->\n\t\t\t\t<div class=\"coment-time\">\n\t\t\t\t\t{{ item.time | showDate }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- 点赞 回复评论 -->\n\t\t<div class=\"like\">\n\t\t\t<span class=\"iconfont icon-dianzan\" :class=\"{ isLike: item.liked }\" @click=\"isLikeCommentBy(item)\">{{ item.likedCount | formatNum }}</span>\n\t\t\t<span class=\"iconfont icon-comment\" @click=\"replyComment(item)\"></span>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n/* 网络请求 */\nimport { isLikeComment } from \"../../../../network/comment/comment\";\nimport { formatDate } from \"../../../common/formatDate\";\nexport default {\n\tname: \"CommentItem\",\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t},\n\t\tcommentType: {\n\t\t\ttype: Number,\n\t\t},\n\t\t// id:评论的资源id\n\t\tcommentresId: {\n\t\t\ttype: [Number, String],\n\t\t},\n\t},\n\tfilters: {\n\t\tshowDate(value) {\n\t\t\tconst date = new Date(value);\n\t\t\treturn formatDate(date, \"yyyy-MM-dd   hh:mm:ss\");\n\t\t},\n\t},\n\tdata() {\n\t\treturn {};\n\t},\n\tmethods: {\n\t\t// 点击用户头像\n\t\ttoUserDetail(uid) {\n\t\t\tthis.$router.push(\"/userdetail/\" + uid);\n\t\t\t// 如果在歌曲详情页点击 需要关闭歌曲详情页\n\t\t\tthis.$emit(\"toUserDetail\");\n\t\t},\n\t\t// 点击回复评论\n\t\treplyComment(item) {\n\t\t\tlet replyInfo = {};\n\t\t\treplyInfo.commentId = item.commentId;\n\t\t\treplyInfo.uname = item.user.nickname;\n\t\t\tthis.$emit(\"getReplyComment\", replyInfo);\n\t\t},\n\t\t// 点赞评论\n\t\tisLikeCommentBy(item) {\n\t\t\t// 先判断登录状态\n\t\t\tif (!this.$store.state.isLogin) {\n\t\t\t\tthis.$message({\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: \"登录后才能点赞\",\n\t\t\t\t\tshowClose: true,\n\t\t\t\t\tcenter: true,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet t = this.item.liked ? 0 : 1;\n\t\t\t// 发送网络请求\n\t\t\tisLikeComment(this.commentresId, this.commentType, t, item.commentId)\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.data.code === 200) {\n\t\t\t\t\t\t// this.isLike = !this.isLike;\n\t\t\t\t\t\tif (t == 0) {\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\t\tmessage: \"已取消点赞\",\n\t\t\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// eslint-disable-next-line vue/no-mutating-props\n\t\t\t\t\t\t\tthis.item.likedCount = this.item.likedCount - 1;\n\t\t\t\t\t\t\t// eslint-disable-next-line vue/no-mutating-props\n\t\t\t\t\t\t\tthis.item.liked = !this.item.liked;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\t\tmessage: \"点赞成功\",\n\t\t\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// eslint-disable-next-line vue/no-mutating-props\n\t\t\t\t\t\t\tthis.item.likedCount = this.item.likedCount + 1;\n\t\t\t\t\t\t\t// eslint-disable-next-line vue/no-mutating-props\n\t\t\t\t\t\t\tthis.item.liked = !this.item.liked;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$message.error(\"点赞失败,请稍后重试!\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.$message.error(err , \"点赞失败,请稍后重试!\");\n\t\t\t\t});\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.coment-item {\n\tborder-bottom: 1px solid #eee;\n\tpadding: 15px 0;\n\t.base-info {\n\t\tdisplay: flex;\n\t\tjustify-content: left;\n\t\t.avatar {\n\t\t\twidth: 6%;\n\t\t\timg {\n\t\t\t\twidth: 100%;\n\t\t\t\tborder-radius: 50%;\n\t\t\t}\n\t\t}\n\t\t.right-info {\n\t\t\twidth: 94%;\n\t\t\tpadding-left: 15px;\n\t\t\t.content {\n\t\t\t\tpadding-top: 10px;\n\t\t\t\tspan {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tcolor: #5091ca;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.be-replied {\n\t\t\t\tmargin: 15px 0;\n\t\t\t\tpadding: 20px 10px;\n\t\t\t\tbackground: #eee;\n\t\t\t\tspan {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tcolor: #5091ca;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.coment-time {\n\t\t\t\tpadding-top: 10px;\n\t\t\t}\n\t\t}\n\t}\n\t.like {\n\t\ttext-align: right;\n\t\tpadding-right: 20px;\n\t\tspan {\n\t\t\tpadding-right: 15px;\n\t\t\tcursor: pointer;\n\t\t\t&:hover {\n\t\t\t\tfont-weight: 700;\n\t\t\t}\n\t\t}\n\t}\n}\n.isLike {\n\tcolor: var(--themeColor);\n}\n</style>\n"],"mappings":";AAoCA;AACA,SAAAA,aAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;QACA;MACA;IACA;IACAC,WAAA;MACAH,IAAA,EAAAI;IACA;IACA;IACAC,YAAA;MACAL,IAAA,GAAAI,MAAA,EAAAE,MAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAAC,KAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,KAAA;MACA,OAAAb,UAAA,CAAAc,IAAA;IACA;EACA;EACAE,KAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,aAAAC,GAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,kBAAAF,GAAA;MACA;MACA,KAAAG,KAAA;IACA;IACA;IACAC,aAAApB,IAAA;MACA,IAAAqB,SAAA;MACAA,SAAA,CAAAC,SAAA,GAAAtB,IAAA,CAAAsB,SAAA;MACAD,SAAA,CAAAE,KAAA,GAAAvB,IAAA,CAAAwB,IAAA,CAAAC,QAAA;MACA,KAAAN,KAAA,oBAAAE,SAAA;IACA;IACA;IACAK,gBAAA1B,IAAA;MACA;MACA,UAAA2B,MAAA,CAAAC,KAAA,CAAAC,OAAA;QACA,KAAAC,QAAA;UACA7B,IAAA;UACA8B,OAAA;UACAC,SAAA;UACAC,MAAA;QACA;QACA;MACA;MACA,IAAAC,CAAA,QAAAlC,IAAA,CAAAmC,KAAA;MACA;MACAvC,aAAA,MAAAU,YAAA,OAAAF,WAAA,EAAA8B,CAAA,EAAAlC,IAAA,CAAAsB,SAAA,EACAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAxB,IAAA,CAAAyB,IAAA;UACA;UACA,IAAAJ,CAAA;YACA,KAAAJ,QAAA;cACA7B,IAAA;cACA8B,OAAA;cACAE,MAAA;YACA;YACA;YACA,KAAAjC,IAAA,CAAAuC,UAAA,QAAAvC,IAAA,CAAAuC,UAAA;YACA;YACA,KAAAvC,IAAA,CAAAmC,KAAA,SAAAnC,IAAA,CAAAmC,KAAA;UACA;YACA,KAAAL,QAAA;cACA7B,IAAA;cACA8B,OAAA;cACAE,MAAA;YACA;YACA;YACA,KAAAjC,IAAA,CAAAuC,UAAA,QAAAvC,IAAA,CAAAuC,UAAA;YACA;YACA,KAAAvC,IAAA,CAAAmC,KAAA,SAAAnC,IAAA,CAAAmC,KAAA;UACA;QACA;UACA,KAAAL,QAAA,CAAAU,KAAA;QACA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAAZ,QAAA,CAAAU,KAAA,CAAAE,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}