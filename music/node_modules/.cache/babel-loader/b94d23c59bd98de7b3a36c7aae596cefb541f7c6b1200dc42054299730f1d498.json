{"ast":null,"code":"import { getNewAlbum } from \"../../../../../network/findmusic/newsongs/newsongs\";\nimport TypeNav from \"./TypeNav.vue\";\nimport Albumlist from \"../../../../components/content/albumlist/Albumlist.vue\";\nexport default {\n  name: \"NewAlbum\",\n  components: {\n    TypeNav,\n    Albumlist\n  },\n  data() {\n    return {\n      typeitem: [{\n        type: \"全部\",\n        code: \"ALL\"\n      }, {\n        type: \"华语\",\n        code: \"ZH\"\n      }, {\n        type: \"欧美\",\n        code: \"EA\"\n      }, {\n        type: \"日本\",\n        code: \"JP\"\n      }, {\n        type: \"韩国\",\n        code: \"KR\"\n      }],\n      currentArea: \"ALL\",\n      //当前分类区域\n      newalbum: [],\n      albumCount: 0,\n      currentPage: 1\n    };\n  },\n  created() {\n    this.getNewAlbumBy();\n  },\n  methods: {\n    /* \n      网络请求\n      */\n    //默认获取全部分类的专辑\n    getNewAlbumBy(area = \"ALL\", page = 1) {\n      let offset = (page - 1) * 50;\n      getNewAlbum(offset, area).then(res => {\n        this.newalbum = res.data.albums;\n        this.albumCount = res.data.total;\n      });\n    },\n    /* \n       事件监听\n       */\n    // 分类导航点击事件\n    typeItemClick(area) {\n      this.currentArea = area;\n      this.getNewAlbumBy(area);\n      this.currentPage = 1;\n    },\n    // 分页事件\n    changAlbumPage(page) {\n      this.currentPage = page;\n      this.getNewAlbumBy(this.currentArea, page);\n    }\n  }\n};","map":{"version":3,"names":["getNewAlbum","TypeNav","Albumlist","name","components","data","typeitem","type","code","currentArea","newalbum","albumCount","currentPage","created","getNewAlbumBy","methods","area","page","offset","then","res","albums","total","typeItemClick","changAlbumPage"],"sources":["src/views/findmusic/newsongs/Childcomps/NewAlbum.vue"],"sourcesContent":["<template>\n\t<div>\n\t\t<div class=\"hd\">\n\t\t\t<TypeNav :typeitem=\"typeitem\" @typeItemClick=\"typeItemClick\" />\n\t\t</div>\n\t\t<div class=\"bd\" v-if=\"newalbum.length != 0\">\n\t\t\t<Albumlist :albumlist=\"newalbum\" />\n\t\t\t<Pagination :total=\"albumCount\" :page-size=\"50\" :current-page=\"currentPage\" @handleCurrentChange=\"changAlbumPage\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { getNewAlbum } from \"../../../../../network/findmusic/newsongs/newsongs\";\nimport TypeNav from \"./TypeNav.vue\";\nimport Albumlist from \"../../../../components/content/albumlist/Albumlist.vue\";\nexport default {\n\tname: \"NewAlbum\",\n\tcomponents: { TypeNav, Albumlist },\n\tdata() {\n\t\treturn {\n\t\t\ttypeitem: [\n\t\t\t\t{ type: \"全部\", code: \"ALL\" },\n\t\t\t\t{ type: \"华语\", code: \"ZH\" },\n\t\t\t\t{ type: \"欧美\", code: \"EA\" },\n\t\t\t\t{ type: \"日本\", code: \"JP\" },\n\t\t\t\t{ type: \"韩国\", code: \"KR\" },\n\t\t\t],\n\t\t\tcurrentArea: \"ALL\", //当前分类区域\n\t\t\tnewalbum: [],\n\t\t\talbumCount: 0,\n\t\t\tcurrentPage: 1,\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getNewAlbumBy();\n\t},\n\tmethods: {\n\t\t/* \n    网络请求\n    */\n\t\t//默认获取全部分类的专辑\n\t\tgetNewAlbumBy(area = \"ALL\", page = 1) {\n\t\t\tlet offset = (page - 1) * 50;\n\t\t\tgetNewAlbum(offset, area).then(res => {\n\t\t\t\tthis.newalbum = res.data.albums;\n\t\t\t\tthis.albumCount = res.data.total;\n\t\t\t});\n\t\t},\n\t\t/* \n     事件监听\n     */\n\t\t// 分类导航点击事件\n\t\ttypeItemClick(area) {\n\t\t\tthis.currentArea = area;\n\t\t\tthis.getNewAlbumBy(area);\n\t\t\tthis.currentPage = 1;\n\t\t},\n\t\t// 分页事件\n\t\tchangAlbumPage(page) {\n\t\t\tthis.currentPage = page;\n\t\t\tthis.getNewAlbumBy(this.currentArea, page);\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.bd {\n\tmargin-top: 30px;\n}\n</style>\n"],"mappings":"AAaA,SAAAA,WAAA;AACA,OAAAC,OAAA;AACA,OAAAC,SAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAH,OAAA;IAAAC;EAAA;EACAG,KAAA;IACA;MACAC,QAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,EACA;MACAC,WAAA;MAAA;MACAC,QAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA;AACA;AACA;IACA;IACAD,cAAAE,IAAA,UAAAC,IAAA;MACA,IAAAC,MAAA,IAAAD,IAAA;MACAjB,WAAA,CAAAkB,MAAA,EAAAF,IAAA,EAAAG,IAAA,CAAAC,GAAA;QACA,KAAAV,QAAA,GAAAU,GAAA,CAAAf,IAAA,CAAAgB,MAAA;QACA,KAAAV,UAAA,GAAAS,GAAA,CAAAf,IAAA,CAAAiB,KAAA;MACA;IACA;IACA;AACA;AACA;IACA;IACAC,cAAAP,IAAA;MACA,KAAAP,WAAA,GAAAO,IAAA;MACA,KAAAF,aAAA,CAAAE,IAAA;MACA,KAAAJ,WAAA;IACA;IACA;IACAY,eAAAP,IAAA;MACA,KAAAL,WAAA,GAAAK,IAAA;MACA,KAAAH,aAAA,MAAAL,WAAA,EAAAQ,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}