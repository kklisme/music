{"ast":null,"code":"export default {\n  name: \"app_TagsNav\",\n  props: {\n    allTag: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    hotTag: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      isShow: false,\n      //控制选项卡显示\n      tagTitle: \"全部分类\",\n      currentIndexA: null,\n      //用于所有标签和热门标签联动\n      currentIndexH: 0 //用于所有标签和热门标签联动\n    };\n  },\n\n  methods: {\n    // 显示所有标签分类\n    showAllTag() {\n      this.isShow = !this.isShow;\n    },\n    /* 全部标签点击事件 */\n    tagClickA(tagNameA, index, id) {\n      this.currentIndexA = index; //点击后绑定样式\n      this.$emit(\"tagClick\", tagNameA, id); //向父组件传递事件 用于从新发送网络请求(根据当前标签名或id获取数据)\n      /* 热门和全部标签联动 */\n      let indexH = this.hotTag.findIndex(item => {\n        //查找热门标签里面是否存在当前点击的标签名，如果存在就返回该热门标签的索引\n        return item.name == tagNameA;\n      });\n      this.currentIndexH = indexH; //给热门标签绑定样式\n      /* 把当前点击的标签名作为标题 tagTitle */\n      this.tagTitle = tagNameA;\n    },\n    /* 热门标签点击事件 */\n    tagClickH(tagNameH, index, id) {\n      this.currentIndexH = index;\n      this.$emit(\"tagClick\", tagNameH, id);\n      /* 热门和全部标签联动 */\n      let indexA = this.allTag.findIndex(item => {\n        return item.name == tagNameH;\n      });\n      if (indexA == -1) {\n        this.currentIndexA = null;\n      } else this.currentIndexA = indexA;\n      /* 把当前点击的标签名作为标题 tagTitle */\n      this.tagTitle = tagNameH;\n    }\n  },\n  mounted() {\n    // 点击其他区域关闭所有标签分类\n    document.addEventListener(\"mouseup\", e => {\n      let allTagList = this.$refs.alltaglist;\n      if (allTagList) {\n        if (!allTagList.contains(e.target)) {\n          this.isShow = false;\n        }\n      }\n    });\n  }\n};","map":{"version":3,"names":["name","props","allTag","type","Array","default","hotTag","data","isShow","tagTitle","currentIndexA","currentIndexH","methods","showAllTag","tagClickA","tagNameA","index","id","$emit","indexH","findIndex","item","tagClickH","tagNameH","indexA","mounted","document","addEventListener","e","allTagList","$refs","alltaglist","contains","target"],"sources":["src/components/content/TagsNav.vue"],"sourcesContent":["<template>\n\t<div class=\"tags-nav\" v-if=\"allTag.length !== 0 || hotTag.length !== 0\">\n\t\t<!-- 标签 -->\n\t\t<div class=\"tags\">\n\t\t\t<!-- 全部标签 -->\n\t\t\t<div class=\"all\" @click=\"showAllTag\" ref=\"alltaglist\">\n\t\t\t\t<span>{{ tagTitle }} <i class=\"el-icon-arrow-down\"></i> </span>\n\t\t\t</div>\n\t\t\t<transition name=\"el-fade-in\">\n\t\t\t\t<div class=\"all-tag-list\" v-show=\"isShow\">\n\t\t\t\t\t<div class=\"all-tag\">\n\t\t\t\t\t\t<div class=\"all-tag-item\" v-for=\"(item, index) in allTag\" :key=\"index\" @click=\"tagClickA(item.name, index, item.id)\">\n\t\t\t\t\t\t\t<span :class=\"{ activeAll: currentIndexA == index }\">{{ item.name }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</transition>\n\n\t\t\t<!-- 热门标签 -->\n\t\t\t<div class=\"hot-tag\">\n\t\t\t\t<div class=\"hot-tag-item\" v-for=\"(item, index) in hotTag\" :key=\"index\" @click=\"tagClickH(item.name, index, item.id)\" :class=\"{ activeHot: currentIndexH == index }\">\n\t\t\t\t\t{{ item.name }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: \"app_TagsNav\",\n\tprops: {\n\t\tallTag: {\n\t\t\ttype: Array,\n\t\t\tdefault() {\n\t\t\t\treturn [];\n\t\t\t},\n\t\t},\n\t\thotTag: {\n\t\t\ttype: Array,\n\t\t\tdefault() {\n\t\t\t\treturn [];\n\t\t\t},\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisShow: false, //控制选项卡显示\n\t\t\ttagTitle: \"全部分类\",\n\t\t\tcurrentIndexA: null, //用于所有标签和热门标签联动\n\t\t\tcurrentIndexH: 0, //用于所有标签和热门标签联动\n\t\t};\n\t},\n\tmethods: {\n\t\t// 显示所有标签分类\n\t\tshowAllTag() {\n\t\t\tthis.isShow = !this.isShow;\n\t\t},\n\t\t/* 全部标签点击事件 */\n\t\ttagClickA(tagNameA, index, id) {\n\t\t\tthis.currentIndexA = index; //点击后绑定样式\n\t\t\tthis.$emit(\"tagClick\", tagNameA, id); //向父组件传递事件 用于从新发送网络请求(根据当前标签名或id获取数据)\n\t\t\t/* 热门和全部标签联动 */\n\t\t\tlet indexH = this.hotTag.findIndex(item => {\n\t\t\t\t//查找热门标签里面是否存在当前点击的标签名，如果存在就返回该热门标签的索引\n\t\t\t\treturn item.name == tagNameA;\n\t\t\t});\n\t\t\tthis.currentIndexH = indexH; //给热门标签绑定样式\n\t\t\t/* 把当前点击的标签名作为标题 tagTitle */\n\t\t\tthis.tagTitle = tagNameA;\n\t\t},\n\n\t\t/* 热门标签点击事件 */\n\t\ttagClickH(tagNameH, index, id) {\n\t\t\tthis.currentIndexH = index;\n\t\t\tthis.$emit(\"tagClick\", tagNameH, id);\n\t\t\t/* 热门和全部标签联动 */\n\t\t\tlet indexA = this.allTag.findIndex(item => {\n\t\t\t\treturn item.name == tagNameH;\n\t\t\t});\n\t\t\tif (indexA == -1) {\n\t\t\t\tthis.currentIndexA = null;\n\t\t\t} else this.currentIndexA = indexA;\n\t\t\t/* 把当前点击的标签名作为标题 tagTitle */\n\t\t\tthis.tagTitle = tagNameH;\n\t\t},\n\t},\n\tmounted() {\n\t\t// 点击其他区域关闭所有标签分类\n\t\tdocument.addEventListener(\"mouseup\", e => {\n\t\t\tlet allTagList = this.$refs.alltaglist;\n\t\t\tif (allTagList) {\n\t\t\t\tif (!allTagList.contains(e.target)) {\n\t\t\t\t\tthis.isShow = false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n// 标签\n.tags {\n\tposition: relative;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tcursor: pointer;\n\tspan:hover {\n\t\tcolor: var(--themeColor);\n\t}\n\t.hot-tag {\n\t\twidth: 70%;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\t.hot-tag-item {\n\t\t\tpadding: 3px 8px;\n\t\t}\n\t}\n}\n.all {\n\tpadding: 0 10px;\n\tborder: 1px solid #dddddd;\n\tborder-radius: 5px;\n\t&:hover {\n\t\tborder-color: var(--mycompColor);\n\t\tcolor: var(--mycompColor);\n\t}\n}\n.all-tag-list::before {\n\tposition: absolute;\n\ttop: -30px;\n\tleft: 15px;\n\tcontent: \"\";\n\twidth: 0;\n\theight: 0;\n\tborder: 15px solid;\n\tborder-left-color: transparent;\n\tborder-top-color: transparent;\n\tborder-right-color: transparent;\n\tborder-bottom-color: #fff;\n}\n.all-tag-list {\n\tposition: absolute;\n\ttop: 40px;\n\tleft: 25px;\n\tz-index: 99;\n}\n.all-tag {\n\tdisplay: grid;\n\tjustify-content: space-around;\n\talign-content: space-between;\n\tgrid-template-columns: repeat(4, 24%);\n\twidth: 400px;\n\theight: 300px;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n\tbackground: #fff;\n\tbox-shadow: 0px 0px 8px 3px #eee;\n\t// padding: 10px 0px;\n\t.all-tag-item {\n\t\tpadding: 8px 0;\n\t\twidth: 90px;\n\t\ttext-align: center;\n\t\tspan {\n\t\t\tpadding: 3px 5px;\n\t\t}\n\t}\n}\n.activeHot {\n\tcolor: var(--mycompColor);\n\tbackground: var(--tagRgba);\n\tborder-radius: 5px;\n}\n.activeAll {\n\tcolor: var(--mycompColor);\n\tbackground: var(--tagRgba);\n\tborder-radius: 5px;\n}\n\n// 滚动条\n::-webkit-scrollbar {\n\twidth: 5px;\n\theight: 5px;\n\tbackground-color: #fff;\n}\n</style>\n"],"mappings":"AA6BA;EACAA,IAAA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;QACA;MACA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAC,KAAA;MACAC,QAAA;QACA;MACA;IACA;EACA;EACAE,KAAA;IACA;MACAC,MAAA;MAAA;MACAC,QAAA;MACAC,aAAA;MAAA;MACAC,aAAA;IACA;EACA;;EACAC,OAAA;IACA;IACAC,WAAA;MACA,KAAAL,MAAA,SAAAA,MAAA;IACA;IACA;IACAM,UAAAC,QAAA,EAAAC,KAAA,EAAAC,EAAA;MACA,KAAAP,aAAA,GAAAM,KAAA;MACA,KAAAE,KAAA,aAAAH,QAAA,EAAAE,EAAA;MACA;MACA,IAAAE,MAAA,QAAAb,MAAA,CAAAc,SAAA,CAAAC,IAAA;QACA;QACA,OAAAA,IAAA,CAAArB,IAAA,IAAAe,QAAA;MACA;MACA,KAAAJ,aAAA,GAAAQ,MAAA;MACA;MACA,KAAAV,QAAA,GAAAM,QAAA;IACA;IAEA;IACAO,UAAAC,QAAA,EAAAP,KAAA,EAAAC,EAAA;MACA,KAAAN,aAAA,GAAAK,KAAA;MACA,KAAAE,KAAA,aAAAK,QAAA,EAAAN,EAAA;MACA;MACA,IAAAO,MAAA,QAAAtB,MAAA,CAAAkB,SAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAArB,IAAA,IAAAuB,QAAA;MACA;MACA,IAAAC,MAAA;QACA,KAAAd,aAAA;MACA,YAAAA,aAAA,GAAAc,MAAA;MACA;MACA,KAAAf,QAAA,GAAAc,QAAA;IACA;EACA;EACAE,QAAA;IACA;IACAC,QAAA,CAAAC,gBAAA,YAAAC,CAAA;MACA,IAAAC,UAAA,QAAAC,KAAA,CAAAC,UAAA;MACA,IAAAF,UAAA;QACA,KAAAA,UAAA,CAAAG,QAAA,CAAAJ,CAAA,CAAAK,MAAA;UACA,KAAAzB,MAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}