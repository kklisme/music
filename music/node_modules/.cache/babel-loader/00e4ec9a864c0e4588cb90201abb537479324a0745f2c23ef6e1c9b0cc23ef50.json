{"ast":null,"code":"/* 网络请求 */\nimport { getSinger } from \"../../../../network/findmusic/singer/singer\";\n/* 子组件 */\nimport TagsBar from \"../../../components/content/TagsBar.vue\";\nimport Singerlist from \"../../../components/content/singerlist/Singerlist.vue\";\nexport default {\n  name: \"app_Singer\",\n  components: {\n    TagsBar,\n    Singerlist\n  },\n  data() {\n    return {\n      /* 分类标签 */\n      areaTags: {\n        category: \"语种\",\n        list: [{\n          area: -1,\n          name: \"全部\"\n        }, {\n          area: 7,\n          name: \"华语\"\n        }, {\n          area: 96,\n          name: \"欧美\"\n        }, {\n          area: 8,\n          name: \"日本\"\n        }, {\n          area: 16,\n          name: \"韩国\"\n        }, {\n          area: 0,\n          name: \"其它\"\n        }]\n      },\n      typeTags: {\n        category: \"分类\",\n        list: [{\n          type: -1,\n          name: \"全部\"\n        }, {\n          type: 1,\n          name: \"男歌手\"\n        }, {\n          type: 2,\n          name: \"女歌手\"\n        }, {\n          type: 3,\n          name: \"乐队\"\n        }]\n      },\n      initialTags: {\n        category: \"筛选\",\n        list: [{\n          initial: -1,\n          name: \"热门\"\n        }, {\n          initial: \"a\",\n          name: \"A\"\n        }, {\n          initial: \"b\",\n          name: \"B\"\n        }, {\n          initial: \"c\",\n          name: \"C\"\n        }, {\n          initial: \"d\",\n          name: \"D\"\n        }, {\n          initial: \"e\",\n          name: \"E\"\n        }, {\n          initial: \"f\",\n          name: \"F\"\n        }, {\n          initial: \"g\",\n          name: \"G\"\n        }, {\n          initial: \"h\",\n          name: \"H\"\n        }, {\n          initial: \"i\",\n          name: \"I\"\n        }, {\n          initial: \"j\",\n          name: \"J\"\n        }, {\n          initial: \"k\",\n          name: \"K\"\n        }, {\n          initial: \"l\",\n          name: \"L\"\n        }, {\n          initial: \"m\",\n          name: \"M\"\n        }, {\n          initial: \"n\",\n          name: \"N\"\n        }, {\n          initial: \"o\",\n          name: \"O\"\n        }, {\n          initial: \"p\",\n          name: \"P\"\n        }, {\n          initial: \"q\",\n          name: \"Q\"\n        }, {\n          initial: \"r\",\n          name: \"R\"\n        }, {\n          initial: \"s\",\n          name: \"S\"\n        }, {\n          initial: \"t\",\n          name: \"T\"\n        }, {\n          initial: \"u\",\n          name: \"U\"\n        }, {\n          initial: \"v\",\n          name: \"V\"\n        }, {\n          initial: \"w\",\n          name: \"W\"\n        }, {\n          initial: \"x\",\n          name: \"X\"\n        }, {\n          initial: \"y\",\n          name: \"Y\"\n        }, {\n          initial: \"z\",\n          name: \"Z\"\n        }, {\n          initial: 0,\n          name: \"#\"\n        }]\n      },\n      area: -1,\n      type: -1,\n      initial: -1,\n      singerlist: [],\n      currentPage: 1,\n      total: 960\n    };\n  },\n  created() {\n    // 获取歌手列表\n    this.getSingerBy(this.area, this.type, this.initial, 1);\n  },\n  methods: {\n    /* 网络请求事件 */\n    getSingerBy(area, type, initial, page) {\n      let offset = (page - 1) * 48;\n      getSinger(area, type, initial, offset).then(res => {\n        this.singerlist = res.data.artists;\n      }).catch(err => err);\n    },\n    /* 标签点击事件 */\n    areaClick(item) {\n      this.area = item.area;\n      this.currentPage = 1;\n      this.getSingerBy(this.area, this.type, this.initial, 1);\n    },\n    typeClick(item) {\n      this.type = item.type;\n      this.currentPage = 1;\n      this.getSingerBy(this.area, this.type, this.initial, 1);\n    },\n    initialClick(item) {\n      this.initial = item.initial;\n      this.currentPage = 1;\n      this.getSingerBy(this.area, this.type, this.initial, 1);\n    },\n    /* 分页事件 */\n    handleCurrentChange(page) {\n      // 当前页码改变时触发（参数是当前页码）\n      this.currentPage = page;\n      this.getSingerBy(this.area, this.type, this.initial, page);\n      let view = document.querySelector(\".view\");\n      view.scrollTo({\n        top: 200\n      });\n    }\n  }\n};","map":{"version":3,"names":["getSinger","TagsBar","Singerlist","name","components","data","areaTags","category","list","area","typeTags","type","initialTags","initial","singerlist","currentPage","total","created","getSingerBy","methods","page","offset","then","res","artists","catch","err","areaClick","item","typeClick","initialClick","handleCurrentChange","view","document","querySelector","scrollTo","top"],"sources":["src/views/findmusic/signer/Singer.vue"],"sourcesContent":["<template>\n\t<div id=\"singer\">\n\t\t<!-- 顶部分类标签 -->\n\t\t<div class=\"top-tags\">\n\t\t\t<TagsBar :taglist=\"areaTags\" @tagBarClick=\"areaClick\" />\n\t\t\t<TagsBar :taglist=\"typeTags\" @tagBarClick=\"typeClick\" />\n\t\t\t<TagsBar :taglist=\"initialTags\" @tagBarClick=\"initialClick\" />\n\t\t</div>\n\t\t<!-- 歌手列表 -->\n\t\t<div class=\"singerlist\">\n\t\t\t<Singerlist :singerlist=\"singerlist\" />\n\t\t</div>\n\t\t<!-- 分页器 -->\n\t\t<Pagination v-if=\"singerlist.length !== 0\" :total=\"total\" :page-size=\"48\" :current-page=\"currentPage\" :scroll-top=\"false\" @handleCurrentChange=\"handleCurrentChange\" />\n\t</div>\n</template>\n<script>\n/* 网络请求 */\nimport { getSinger } from \"../../../../network/findmusic/singer/singer\";\n/* 子组件 */\nimport TagsBar from \"../../../components/content/TagsBar.vue\";\nimport Singerlist from \"../../../components/content/singerlist/Singerlist.vue\";\nexport default {\n\tname: \"app_Singer\",\n\tcomponents: { TagsBar, Singerlist },\n\tdata() {\n\t\treturn {\n\t\t\t/* 分类标签 */\n\t\t\tareaTags: {\n\t\t\t\tcategory: \"语种\",\n\t\t\t\tlist: [\n\t\t\t\t\t{ area: -1, name: \"全部\" },\n\t\t\t\t\t{ area: 7, name: \"华语\" },\n\t\t\t\t\t{ area: 96, name: \"欧美\" },\n\t\t\t\t\t{ area: 8, name: \"日本\" },\n\t\t\t\t\t{ area: 16, name: \"韩国\" },\n\t\t\t\t\t{ area: 0, name: \"其它\" },\n\t\t\t\t],\n\t\t\t},\n\t\t\ttypeTags: {\n\t\t\t\tcategory: \"分类\",\n\t\t\t\tlist: [\n\t\t\t\t\t{ type: -1, name: \"全部\" },\n\t\t\t\t\t{ type: 1, name: \"男歌手\" },\n\t\t\t\t\t{ type: 2, name: \"女歌手\" },\n\t\t\t\t\t{ type: 3, name: \"乐队\" },\n\t\t\t\t],\n\t\t\t},\n\t\t\tinitialTags: {\n\t\t\t\tcategory: \"筛选\",\n\t\t\t\tlist: [\n\t\t\t\t\t{ initial: -1, name: \"热门\" },\n\t\t\t\t\t{ initial: \"a\", name: \"A\" },\n\t\t\t\t\t{ initial: \"b\", name: \"B\" },\n\t\t\t\t\t{ initial: \"c\", name: \"C\" },\n\t\t\t\t\t{ initial: \"d\", name: \"D\" },\n\t\t\t\t\t{ initial: \"e\", name: \"E\" },\n\t\t\t\t\t{ initial: \"f\", name: \"F\" },\n\t\t\t\t\t{ initial: \"g\", name: \"G\" },\n\t\t\t\t\t{ initial: \"h\", name: \"H\" },\n\t\t\t\t\t{ initial: \"i\", name: \"I\" },\n\t\t\t\t\t{ initial: \"j\", name: \"J\" },\n\t\t\t\t\t{ initial: \"k\", name: \"K\" },\n\t\t\t\t\t{ initial: \"l\", name: \"L\" },\n\t\t\t\t\t{ initial: \"m\", name: \"M\" },\n\t\t\t\t\t{ initial: \"n\", name: \"N\" },\n\t\t\t\t\t{ initial: \"o\", name: \"O\" },\n\t\t\t\t\t{ initial: \"p\", name: \"P\" },\n\t\t\t\t\t{ initial: \"q\", name: \"Q\" },\n\t\t\t\t\t{ initial: \"r\", name: \"R\" },\n\t\t\t\t\t{ initial: \"s\", name: \"S\" },\n\t\t\t\t\t{ initial: \"t\", name: \"T\" },\n\t\t\t\t\t{ initial: \"u\", name: \"U\" },\n\t\t\t\t\t{ initial: \"v\", name: \"V\" },\n\t\t\t\t\t{ initial: \"w\", name: \"W\" },\n\t\t\t\t\t{ initial: \"x\", name: \"X\" },\n\t\t\t\t\t{ initial: \"y\", name: \"Y\" },\n\t\t\t\t\t{ initial: \"z\", name: \"Z\" },\n\t\t\t\t\t{ initial: 0, name: \"#\" },\n\t\t\t\t],\n\t\t\t},\n\t\t\tarea: -1,\n\t\t\ttype: -1,\n\t\t\tinitial: -1,\n\t\t\tsingerlist: [],\n\t\t\tcurrentPage: 1,\n\t\t\ttotal: 960,\n\t\t};\n\t},\n\n\tcreated() {\n\t\t// 获取歌手列表\n\t\tthis.getSingerBy(this.area, this.type, this.initial, 1);\n\t},\n\n\tmethods: {\n\t\t/* 网络请求事件 */\n\t\tgetSingerBy(area, type, initial, page) {\n\t\t\tlet offset = (page - 1) * 48;\n\t\t\tgetSinger(area, type, initial, offset)\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.singerlist = res.data.artists;\n\t\t\t\t})\n\t\t\t\t.catch(err => err);\n\t\t},\n\n\t\t/* 标签点击事件 */\n\t\tareaClick(item) {\n\t\t\tthis.area = item.area;\n\t\t\tthis.currentPage = 1;\n\t\t\tthis.getSingerBy(this.area, this.type, this.initial, 1);\n\t\t},\n\t\ttypeClick(item) {\n\t\t\tthis.type = item.type;\n\t\t\tthis.currentPage = 1;\n\t\t\tthis.getSingerBy(this.area, this.type, this.initial, 1);\n\t\t},\n\t\tinitialClick(item) {\n\t\t\tthis.initial = item.initial;\n\t\t\tthis.currentPage = 1;\n\t\t\tthis.getSingerBy(this.area, this.type, this.initial, 1);\n\t\t},\n\t\t/* 分页事件 */\n\t\thandleCurrentChange(page) {\n\t\t\t// 当前页码改变时触发（参数是当前页码）\n\t\t\tthis.currentPage = page;\n\t\t\tthis.getSingerBy(this.area, this.type, this.initial, page);\n\t\t\tlet view = document.querySelector(\".view\");\n\t\t\tview.scrollTo({\n\t\t\t\ttop: 200,\n\t\t\t});\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.singerlist {\n\tpadding-top: 20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}