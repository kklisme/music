{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getSongListDetail } from \"../../../../../network/songlistdetail/songlistdetail\";\nimport { getSongUrl, checkMusic } from \"../../../../../network/playmusic/playmusic.js\";\nimport { formatDate } from \"../../../../common/formatDate\";\nexport default {\n  name: \"RankfeatureChild\",\n  props: {\n    item: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      isShowPlay: false,\n      songs: []\n    };\n  },\n  created() {\n    getSongListDetail(this.item.id).then(res => {\n      this.songs = res.data.playlist.tracks.slice(0, 5);\n    });\n  },\n  filters: {\n    formatIndex(index) {\n      return index + 1;\n    },\n    showDate(value) {\n      const date = new Date(value);\n      return formatDate(date, \"yyyy-MM-dd\");\n    }\n  },\n  methods: {\n    rankClick(id) {\n      //点击后根据歌单id 跳转歌单详情页\n      this.$router.push(\"/songlistdetail/\" + id);\n      this.isShowPlay = false;\n    },\n    showIcon() {\n      this.isShowPlay = true;\n    },\n    closeIcon() {\n      this.isShowPlay = false;\n    },\n    //每行歌曲双击播放\n    playMusic(song) {\n      // 先检查歌曲是否可用\n      checkMusic(song.id).then(res => {\n        // 获取歌曲url\n        getSongUrl(song.id).then(res => {\n          this.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\n        });\n        // 更新播放状态\n        this.$store.dispatch(\"changePlayState\", true);\n        //提交vuex保存当前歌曲详情\n        this.$store.dispatch(\"saveSongDetail\", song);\n        // 提交vuex添加到播放列表\n        this.$store.dispatch(\"addPlayinglist\", song);\n        console.log(res);\n      }).catch(err => {\n        this.$message({\n          message: \"暂时无法播放，换首试试\",\n          type: \"warning\",\n          center: true\n        });\n        console.log(err);\n      });\n    },\n    tableRowClassName({\n      row,\n      rowIndex\n    }) {\n      row.index = rowIndex;\n      if (rowIndex % 2 !== 0) {\n        return \"rowEven\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["getSongListDetail","getSongUrl","checkMusic","formatDate","name","props","item","type","Object","default","data","isShowPlay","songs","created","id","then","res","playlist","tracks","slice","filters","formatIndex","index","showDate","value","date","Date","methods","rankClick","$router","push","showIcon","closeIcon","playMusic","song","$store","dispatch","url","console","log","catch","err","$message","message","center","tableRowClassName","row","rowIndex"],"sources":["src/views/findmusic/songrank/Childcomps/RankfeatureChild.vue"],"sourcesContent":["<template>\n\t<div class=\"bd\">\n\t\t<div class=\"left-img\" @click=\"rankClick(item.id)\" @mouseenter=\"showIcon\" @mouseleave=\"closeIcon\">\n\t\t\t<transition name=\"el-fade-in-linear\">\n\t\t\t\t<div class=\"mask-playicon\" v-show=\"isShowPlay\">\n\t\t\t\t\t<span class=\"iconfont icon-play\"></span>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t\t<div class=\"time\">{{ item.updateTime | showDate }}更新</div>\n\t\t\t<img :src=\"item.coverImgUrl\" alt=\"\" />\n\t\t</div>\n\t\t<!-- 右侧歌曲列表 -->\n\t\t<div class=\"right-songlist\">\n\t\t\t<div v-if=\"songs.length != 0\">\n\t\t\t\t<el-table size=\"small\" :data=\"songs\" stripe style=\"width: 100%\" :show-header=\"false\" @row-dblclick=\"playMusic\" :row-class-name=\"tableRowClassName\">\n\t\t\t\t\t<el-table-column label=\"序号\" width=\"20\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span :class=\"{ hot: scope.row.index < 3 }\">{{ scope.row.index | formatIndex }}</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column prop=\"name\" label=\"歌曲\" :show-overflow-tooltip=\"true\"></el-table-column>\n\t\t\t\t\t<el-table-column prop=\"ar[0].name\" align=\"right\" label=\"歌手\" :show-overflow-tooltip=\"true\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span class=\"by\">{{ scope.row.ar[0].name }}</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t</el-table>\n\t\t\t\t<div class=\"more by\" @click=\"rankClick(item.id)\">查看全部<span class=\"iconfont icon-xiayiye\"></span></div>\n\t\t\t</div>\n\t\t\t<div v-else>\n\t\t\t\t<el-skeleton :rows=\"6\" animated />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { getSongListDetail } from \"../../../../../network/songlistdetail/songlistdetail\";\nimport { getSongUrl, checkMusic } from \"../../../../../network/playmusic/playmusic.js\";\nimport { formatDate } from \"../../../../common/formatDate\";\nexport default {\n\tname: \"RankfeatureChild\",\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisShowPlay: false,\n\t\t\tsongs: [],\n\t\t};\n\t},\n\tcreated() {\n\t\tgetSongListDetail(this.item.id).then(res => {\n\t\t\tthis.songs = res.data.playlist.tracks.slice(0, 5);\n\t\t});\n\t},\n\tfilters: {\n\t\tformatIndex(index) {\n\t\t\treturn index + 1;\n\t\t},\n\t\tshowDate(value) {\n\t\t\tconst date = new Date(value);\n\t\t\treturn formatDate(date, \"yyyy-MM-dd\");\n\t\t},\n\t},\n\tmethods: {\n\t\trankClick(id) {\n\t\t\t//点击后根据歌单id 跳转歌单详情页\n\t\t\tthis.$router.push(\"/songlistdetail/\" + id);\n\t\t\tthis.isShowPlay = false;\n\t\t},\n\t\tshowIcon() {\n\t\t\tthis.isShowPlay = true;\n\t\t},\n\t\tcloseIcon() {\n\t\t\tthis.isShowPlay = false;\n\t\t},\n\t\t//每行歌曲双击播放\n\t\tplayMusic(song) {\n\t\t\t// 先检查歌曲是否可用\n\t\t\tcheckMusic(song.id)\n\t\t\t\t.then(res => {\n\t\t\t\t\t// 获取歌曲url\n\t\t\t\t\tgetSongUrl(song.id).then(res => {\n\t\t\t\t\t\tthis.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\n\t\t\t\t\t});\n\t\t\t\t\t// 更新播放状态\n\t\t\t\t\tthis.$store.dispatch(\"changePlayState\", true);\n\t\t\t\t\t//提交vuex保存当前歌曲详情\n\t\t\t\t\tthis.$store.dispatch(\"saveSongDetail\", song);\n\t\t\t\t\t// 提交vuex添加到播放列表\n\t\t\t\t\tthis.$store.dispatch(\"addPlayinglist\", song);\n\t\t\t\t\tconsole.log(res)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.$message({\n\t\t\t\t\t\tmessage: \"暂时无法播放，换首试试\",\n\t\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t});\n\t\t},\n\t\ttableRowClassName({ row, rowIndex }) {\n\t\t\trow.index = rowIndex;\n\t\t\tif (rowIndex % 2 !== 0) {\n\t\t\t\treturn \"rowEven\";\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.bd {\n\tdisplay: flex;\n\theight: 230px;\n\t.left-img {\n\t\tposition: relative;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t\tcursor: pointer;\n\t\timg {\n\t\t\theight: 100%;\n\t\t}\n\t\t.time {\n\t\t\tposition: absolute;\n\t\t\ttop: 130px;\n\t\t\twidth: 100%;\n\t\t\ttext-align: center;\n\t\t\tcolor: #fff;\n\t\t\tfont-size: 12px;\n\t\t}\n\t}\n\t.right-songlist {\n\t\twidth: 84%;\n\t\tpadding-left: 20px;\n\t\theight: 230px;\n\t\t.more {\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 12px;\n\t\t\t.icon-xiayiye {\n\t\t\t\tfont-size: 12px;\n\t\t\t}\n\t\t}\n\t}\n}\n.hot {\n\tcolor: var(--themeColor);\n}\n</style>\n"],"mappings":";AAqCA,SAAAA,iBAAA;AACA,SAAAC,UAAA,EAAAC,UAAA;AACA,SAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAb,iBAAA,MAAAM,IAAA,CAAAQ,EAAA,EAAAC,IAAA,CAAAC,GAAA;MACA,KAAAJ,KAAA,GAAAI,GAAA,CAAAN,IAAA,CAAAO,QAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,KAAA;MACA,OAAAA,KAAA;IACA;IACAC,SAAAC,KAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,KAAA;MACA,OAAArB,UAAA,CAAAsB,IAAA;IACA;EACA;EACAE,OAAA;IACAC,UAAAd,EAAA;MACA;MACA,KAAAe,OAAA,CAAAC,IAAA,sBAAAhB,EAAA;MACA,KAAAH,UAAA;IACA;IACAoB,SAAA;MACA,KAAApB,UAAA;IACA;IACAqB,UAAA;MACA,KAAArB,UAAA;IACA;IACA;IACAsB,UAAAC,IAAA;MACA;MACAhC,UAAA,CAAAgC,IAAA,CAAApB,EAAA,EACAC,IAAA,CAAAC,GAAA;QACA;QACAf,UAAA,CAAAiC,IAAA,CAAApB,EAAA,EAAAC,IAAA,CAAAC,GAAA;UACA,KAAAmB,MAAA,CAAAC,QAAA,gBAAApB,GAAA,CAAAN,IAAA,CAAAA,IAAA,IAAA2B,GAAA;QACA;QACA;QACA,KAAAF,MAAA,CAAAC,QAAA;QACA;QACA,KAAAD,MAAA,CAAAC,QAAA,mBAAAF,IAAA;QACA;QACA,KAAAC,MAAA,CAAAC,QAAA,mBAAAF,IAAA;QACAI,OAAA,CAAAC,GAAA,CAAAvB,GAAA;MACA,GACAwB,KAAA,CAAAC,GAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACApC,IAAA;UACAqC,MAAA;QACA;QACAN,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA;IACA;IACAI,kBAAA;MAAAC,GAAA;MAAAC;IAAA;MACAD,GAAA,CAAAxB,KAAA,GAAAyB,QAAA;MACA,IAAAA,QAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}