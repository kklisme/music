{"ast":null,"code":"/* 网络请求 */\nimport { getAlbumDynamic, getAlbumSong, subAlbum } from \"../../../network/zhuanjidetail/albumdetail\";\nimport { getSongUrl } from \"../../../network/playmusic/playmusic.js\";\nimport { getSubAlbum } from \"../../../network/myfavorite/myfavorite\";\n/* vuex */\nimport { mapGetters } from \"vuex\";\n/* 子组件 */\nimport AlbumTopInfo from \"./Childcomps/AlbumTopInfo.vue\";\nimport SongTable from \"../../components/content/SongTable.vue\";\nimport CommentPage from \"../../components/content/comment/commentPage.vue\";\nexport default {\n  name: \"app_Albumdetail\",\n  components: {\n    AlbumTopInfo,\n    SongTable,\n    CommentPage\n  },\n  data() {\n    return {\n      id: \"\",\n      dynamic: {},\n      albuminfo: {},\n      albumsong: [],\n      isSub: false //是否收藏该专辑\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"subAlbumlist\"])\n  },\n  created() {\n    this.id = this.$route.params.id;\n    // 获取专辑动态信息 如收藏 分享数据\n    this.getAlbumDynamicBy();\n    // 获取专辑歌曲\n    this.getAlbumSongBy();\n    //获取用户收藏的专辑列表\n    if (this.subAlbumlist.length == 0) {\n      this.getUserSubAlbum();\n      return;\n    }\n    // 判断是否收藏了当前专辑\n    this.isSubAlbum();\n  },\n  methods: {\n    /* \n      网络请求\n       */\n    // 获取专辑动态信息 如收藏 分享数据\n    getAlbumDynamicBy() {\n      getAlbumDynamic(this.id).then(res => {\n        this.dynamic = res.data;\n      });\n    },\n    // 获取专辑歌曲\n    getAlbumSongBy() {\n      getAlbumSong(this.id).then(res => {\n        this.albuminfo = res.data.album;\n        this.albumsong = res.data.songs;\n      });\n    },\n    /* \n      事件监听\n      */\n    /* 评论分页事件 */\n    changePage(page) {\n      // 返回指定位置\n      let view = document.querySelector(\".view\");\n      view.scrollTo({\n        behavior: \"smooth\",\n        top: 300\n      });\n      console.log(page);\n    },\n    /* 播放全部歌曲事件 */\n    playAllSong() {\n      this.$store.dispatch(\"addAllSong\", this.albumsong);\n      //默认播放第一首歌\n      getSongUrl(this.albumsong[0].id).then(res => {\n        this.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\n      });\n      //提交vuex保存当前歌曲详情\n      this.$store.dispatch(\"saveSongDetail\", this.albumsong[0]);\n    },\n    /* 收藏专辑事件 */\n    // 获取用户收藏的专辑列表\n    getUserSubAlbum() {\n      getSubAlbum().then(res => {\n        this.$store.dispatch(\"saveFavoriteAlbum\", res.data.data);\n        this.isSubAlbum();\n      });\n    },\n    // 判断是否收藏了当前专辑\n    isSubAlbum() {\n      let index = this.subAlbumlist.findIndex(item => {\n        return item.id == this.id;\n      });\n      if (index == -1) {\n        this.isSub = false;\n      } else {\n        this.isSub = true;\n      }\n    },\n    // 点击收藏按钮的回调\n    subAlbumBy() {\n      let t = !this.isSub ? 1 : 2; // 1 为收藏,其他为取消收藏,\n      // console.log(t);\n      // 发送网络请求 收藏/取消收藏当前专辑\n      subAlbum(t, this.id).then(res => {\n        console.log(res);\n        if (res.data.code == 200) {\n          // 重新获取用户收藏的专辑\n          this.getUserSubAlbum();\n          if (t == 1) {\n            this.$message({\n              type: \"success\",\n              message: \"收藏成功\",\n              center: true\n            });\n          } else {\n            this.$message({\n              type: \"success\",\n              message: \"取消收藏成功\",\n              center: true\n            });\n          }\n        }\n      }).catch(err => this.$message.warning(err, \"操作失败,请重试\"));\n    }\n  }\n};","map":{"version":3,"names":["getAlbumDynamic","getAlbumSong","subAlbum","getSongUrl","getSubAlbum","mapGetters","AlbumTopInfo","SongTable","CommentPage","name","components","data","id","dynamic","albuminfo","albumsong","isSub","computed","created","$route","params","getAlbumDynamicBy","getAlbumSongBy","subAlbumlist","length","getUserSubAlbum","isSubAlbum","methods","then","res","album","songs","changePage","page","view","document","querySelector","scrollTo","behavior","top","console","log","playAllSong","$store","dispatch","url","index","findIndex","item","subAlbumBy","t","code","$message","type","message","center","catch","err","warning"],"sources":["src/views/zhuanjidetail/Albumdetail.vue"],"sourcesContent":["<template>\n\t<div id=\"album-detail\" class=\"w\">\n\t\t<!-- 顶部专辑基本信息 -->\n\t\t<AlbumTopInfo :dynamic=\"dynamic\" :albuminfo=\"albuminfo\" :is-sub=\"isSub\" @playAllSong=\"playAllSong\" @subAlbumBy=\"subAlbumBy\" />\n\t\t<!-- 底部专辑内容 -->\n\t\t<div class=\"singer-works\" v-if=\"Object.keys(dynamic).length !== 0\">\n\t\t\t<el-tabs>\n\t\t\t\t<!-- 专辑歌曲列表 -->\n\t\t\t\t<el-tab-pane label=\"歌曲列表\">\n\t\t\t\t\t<SongTable :songs=\"albumsong\" />\n\t\t\t\t</el-tab-pane>\n\t\t\t\t<!-- 评论 -->\n\t\t\t\t<el-tab-pane>\n\t\t\t\t\t<span slot=\"label\">评论</span>\n\t\t\t\t\t<CommentPage :comment-type=\"3\" :commentres-id=\"id\" @changePage=\"changePage\" />\n\t\t\t\t</el-tab-pane>\n\t\t\t\t<!-- 专辑详情 -->\n\t\t\t\t<el-tab-pane label=\"专辑详情\">\n\t\t\t\t\t<div class=\"album-desc\">\n\t\t\t\t\t\t<p v-if=\"albuminfo.description\" v-html=\"albuminfo.description\"></p>\n\t\t\t\t\t\t<el-empty v-else description=\"暂无介绍\" :image-size=\"200\"></el-empty>\n\t\t\t\t\t</div>\n\t\t\t\t</el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n/* 网络请求 */\nimport { getAlbumDynamic, getAlbumSong, subAlbum } from \"../../../network/zhuanjidetail/albumdetail\";\nimport { getSongUrl } from \"../../../network/playmusic/playmusic.js\";\nimport { getSubAlbum } from \"../../../network/myfavorite/myfavorite\";\n/* vuex */\nimport { mapGetters } from \"vuex\";\n/* 子组件 */\nimport AlbumTopInfo from \"./Childcomps/AlbumTopInfo.vue\";\nimport SongTable from \"../../components/content/SongTable.vue\";\nimport CommentPage from \"../../components/content/comment/commentPage.vue\";\nexport default {\n\tname: \"app_Albumdetail\",\n\tcomponents: { AlbumTopInfo, SongTable, CommentPage },\n\tdata() {\n\t\treturn {\n\t\t\tid: \"\",\n\t\t\tdynamic: {},\n\t\t\talbuminfo: {},\n\t\t\talbumsong: [],\n\t\t\tisSub: false, //是否收藏该专辑\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\"subAlbumlist\"]),\n\t},\n\tcreated() {\n\t\tthis.id = this.$route.params.id;\n\t\t// 获取专辑动态信息 如收藏 分享数据\n\t\tthis.getAlbumDynamicBy();\n\t\t// 获取专辑歌曲\n\t\tthis.getAlbumSongBy();\n\t\t//获取用户收藏的专辑列表\n\t\tif (this.subAlbumlist.length == 0) {\n\t\t\tthis.getUserSubAlbum();\n\t\t\treturn;\n\t\t}\n\t\t// 判断是否收藏了当前专辑\n\t\tthis.isSubAlbum();\n\t},\n\n\tmethods: {\n\t\t/* \n    网络请求\n     */\n\t\t// 获取专辑动态信息 如收藏 分享数据\n\t\tgetAlbumDynamicBy() {\n\t\t\tgetAlbumDynamic(this.id).then(res => {\n\t\t\t\tthis.dynamic = res.data;\n\t\t\t});\n\t\t},\n\t\t// 获取专辑歌曲\n\t\tgetAlbumSongBy() {\n\t\t\tgetAlbumSong(this.id).then(res => {\n\t\t\t\tthis.albuminfo = res.data.album;\n\t\t\t\tthis.albumsong = res.data.songs;\n\t\t\t});\n\t\t},\n\n\t\t/* \n    事件监听\n    */\n\t\t/* 评论分页事件 */\n\t\tchangePage(page) {\n\t\t\t// 返回指定位置\n\t\t\tlet view = document.querySelector(\".view\");\n\t\t\tview.scrollTo({\n\t\t\t\tbehavior: \"smooth\",\n\t\t\t\ttop: 300,\n\t\t\t});\n\t\t\tconsole.log(page)\n\t\t},\n\n\t\t/* 播放全部歌曲事件 */\n\t\tplayAllSong() {\n\t\t\tthis.$store.dispatch(\"addAllSong\", this.albumsong);\n\t\t\t//默认播放第一首歌\n\t\t\tgetSongUrl(this.albumsong[0].id).then(res => {\n\t\t\t\tthis.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\n\t\t\t});\n\t\t\t//提交vuex保存当前歌曲详情\n\t\t\tthis.$store.dispatch(\"saveSongDetail\", this.albumsong[0]);\n\t\t},\n\n\t\t/* 收藏专辑事件 */\n\t\t// 获取用户收藏的专辑列表\n\t\tgetUserSubAlbum() {\n\t\t\tgetSubAlbum().then(res => {\n\t\t\t\tthis.$store.dispatch(\"saveFavoriteAlbum\", res.data.data);\n\t\t\t\tthis.isSubAlbum();\n\t\t\t});\n\t\t},\n\t\t// 判断是否收藏了当前专辑\n\t\tisSubAlbum() {\n\t\t\tlet index = this.subAlbumlist.findIndex(item => {\n\t\t\t\treturn item.id == this.id;\n\t\t\t});\n\t\t\tif (index == -1) {\n\t\t\t\tthis.isSub = false;\n\t\t\t} else {\n\t\t\t\tthis.isSub = true;\n\t\t\t}\n\t\t},\n\t\t// 点击收藏按钮的回调\n\t\tsubAlbumBy() {\n\t\t\tlet t = !this.isSub ? 1 : 2; // 1 为收藏,其他为取消收藏,\n\t\t\t// console.log(t);\n\t\t\t// 发送网络请求 收藏/取消收藏当前专辑\n\t\t\tsubAlbum(t, this.id)\n\t\t\t\t.then(res => {\n\t\t\t\t\tconsole.log(res);\n\t\t\t\t\tif (res.data.code == 200) {\n\t\t\t\t\t\t// 重新获取用户收藏的专辑\n\t\t\t\t\t\tthis.getUserSubAlbum();\n\t\t\t\t\t\tif (t == 1) {\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\t\tmessage: \"收藏成功\",\n\t\t\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.$message({\n\t\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\t\tmessage: \"取消收藏成功\",\n\t\t\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => this.$message.warning(err ,\"操作失败,请重试\"));\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.album-desc {\n\tp {\n\t\ttext-indent: 24px;\n\t}\n}\n</style>\n"],"mappings":"AA6BA;AACA,SAAAA,eAAA,EAAAC,YAAA,EAAAC,QAAA;AACA,SAAAC,UAAA;AACA,SAAAC,WAAA;AACA;AACA,SAAAC,UAAA;AACA;AACA,OAAAC,YAAA;AACA,OAAAC,SAAA;AACA,OAAAC,WAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAJ,YAAA;IAAAC,SAAA;IAAAC;EAAA;EACAG,KAAA;IACA;MACAC,EAAA;MACAC,OAAA;MACAC,SAAA;MACAC,SAAA;MACAC,KAAA;IACA;EACA;;EACAC,QAAA;IACA,GAAAZ,UAAA;EACA;EACAa,QAAA;IACA,KAAAN,EAAA,QAAAO,MAAA,CAAAC,MAAA,CAAAR,EAAA;IACA;IACA,KAAAS,iBAAA;IACA;IACA,KAAAC,cAAA;IACA;IACA,SAAAC,YAAA,CAAAC,MAAA;MACA,KAAAC,eAAA;MACA;IACA;IACA;IACA,KAAAC,UAAA;EACA;EAEAC,OAAA;IACA;AACA;AACA;IACA;IACAN,kBAAA;MACArB,eAAA,MAAAY,EAAA,EAAAgB,IAAA,CAAAC,GAAA;QACA,KAAAhB,OAAA,GAAAgB,GAAA,CAAAlB,IAAA;MACA;IACA;IACA;IACAW,eAAA;MACArB,YAAA,MAAAW,EAAA,EAAAgB,IAAA,CAAAC,GAAA;QACA,KAAAf,SAAA,GAAAe,GAAA,CAAAlB,IAAA,CAAAmB,KAAA;QACA,KAAAf,SAAA,GAAAc,GAAA,CAAAlB,IAAA,CAAAoB,KAAA;MACA;IACA;IAEA;AACA;AACA;IACA;IACAC,WAAAC,IAAA;MACA;MACA,IAAAC,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,IAAA,CAAAG,QAAA;QACAC,QAAA;QACAC,GAAA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAR,IAAA;IACA;IAEA;IACAS,YAAA;MACA,KAAAC,MAAA,CAAAC,QAAA,oBAAA7B,SAAA;MACA;MACAZ,UAAA,MAAAY,SAAA,IAAAH,EAAA,EAAAgB,IAAA,CAAAC,GAAA;QACA,KAAAc,MAAA,CAAAC,QAAA,gBAAAf,GAAA,CAAAlB,IAAA,CAAAA,IAAA,IAAAkC,GAAA;MACA;MACA;MACA,KAAAF,MAAA,CAAAC,QAAA,wBAAA7B,SAAA;IACA;IAEA;IACA;IACAU,gBAAA;MACArB,WAAA,GAAAwB,IAAA,CAAAC,GAAA;QACA,KAAAc,MAAA,CAAAC,QAAA,sBAAAf,GAAA,CAAAlB,IAAA,CAAAA,IAAA;QACA,KAAAe,UAAA;MACA;IACA;IACA;IACAA,WAAA;MACA,IAAAoB,KAAA,QAAAvB,YAAA,CAAAwB,SAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAApC,EAAA,SAAAA,EAAA;MACA;MACA,IAAAkC,KAAA;QACA,KAAA9B,KAAA;MACA;QACA,KAAAA,KAAA;MACA;IACA;IACA;IACAiC,WAAA;MACA,IAAAC,CAAA,SAAAlC,KAAA;MACA;MACA;MACAd,QAAA,CAAAgD,CAAA,OAAAtC,EAAA,EACAgB,IAAA,CAAAC,GAAA;QACAW,OAAA,CAAAC,GAAA,CAAAZ,GAAA;QACA,IAAAA,GAAA,CAAAlB,IAAA,CAAAwC,IAAA;UACA;UACA,KAAA1B,eAAA;UACA,IAAAyB,CAAA;YACA,KAAAE,QAAA;cACAC,IAAA;cACAC,OAAA;cACAC,MAAA;YACA;UACA;YACA,KAAAH,QAAA;cACAC,IAAA;cACAC,OAAA;cACAC,MAAA;YACA;UACA;QACA;MACA,GACAC,KAAA,CAAAC,GAAA,SAAAL,QAAA,CAAAM,OAAA,CAAAD,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}