{"ast":null,"code":"/* 网络请求 */\nimport { /* MV */\ngetMvDetail, getSimiMv, getMvUrl, subMv, getMvLikeInfo, /* 视频 */\ngetVideoDetail, getSimiVideo, getVideoUrl, subVideo, likeVideo, getVideoLikeInfo } from \"../../../network/recvideo/recvideo\";\nimport { getSubMv } from \"../../../network/myfavorite/myfavorite\";\n/* vuex */\nimport { mapGetters } from \"vuex\";\n/* 子组件 */\nimport Videoinfo from \"./Childcomps/Videoinfo.vue\";\nimport CommentPage from \"../../components/content/comment/commentPage.vue\";\nimport Similarvideo from \"./Childcomps/Similarvideo.vue\";\nexport default {\n  inject: [\"reload\"],\n  name: \"VideoDetail\",\n  components: {\n    Videoinfo,\n    CommentPage,\n    Similarvideo\n  },\n  data() {\n    return {\n      id: \"\",\n      type: \"\",\n      videoinfo: {},\n      //视频信息\n      similarvideo: [],\n      //相似视频\n      mvUrl: \"\",\n      videoUrl: \"\",\n      isSub: false,\n      //是否收藏了该视频\n      isLikeInfo: {},\n      //是否点赞的信息\n      commentType: Number //评论类型\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"subMvlist\"])\n  },\n  created() {\n    document.querySelector(\".view\").scrollTop = 0;\n    // 保存路由传过来的id\n    this.id = this.$route.params.id;\n    // 视频类型\n    this.type = this.$route.params.type;\n    if (this.type == \"mv\") {\n      this.commentType = 1; //评论类型是mv\n      //.* MV数据 */\n      // 获取MV详情数据\n      this.getMvDetailBy();\n      // 获取相似mv\n      this.getSimiMvBy();\n      // 获取mv播放地址\n      this.getMvUrlBy();\n      // 获取mv点赞数据\n      this.getMvLikeInfoBy();\n    } else if (this.type == \"video\") {\n      this.commentType = 5; //评论类型是视频\n      //.* 视频数据 */\n      // 获取视频详情数据\n      this.getVideoDetailBy();\n      // 获取相关视频\n      this.getSimiVideoBy();\n      //  获取视频播放地址\n      this.getVideoUrlBy();\n      // 获取视频点赞数据\n      this.getVideoLikeInfoBy();\n    }\n    // 获取收藏的视频MV列表\n    if (this.subMvlist.length == 0) {\n      this.getSubMvBy();\n    }\n    // 判断是否收藏了当前MV或视频\n    this.isSubMv();\n  },\n  methods: {\n    /* \n      网络请求事件\n      */\n    //.* MV数据 */\n    // 获取MV详情数据\n    getMvDetailBy() {\n      getMvDetail(this.id).then(res => {\n        this.videoinfo = res.data.data;\n      });\n    },\n    // 获取相似mv\n    getSimiMvBy() {\n      getSimiMv(this.id).then(res => {\n        this.similarvideo = res.data.mvs;\n      });\n    },\n    // 获取mv播放地址\n    getMvUrlBy() {\n      getMvUrl(this.id).then(res => {\n        this.mvUrl = res.data.data.url;\n      });\n    },\n    // 获取mv点赞数据\n    getMvLikeInfoBy() {\n      getMvLikeInfo(this.id).then(res => {\n        this.isLikeInfo = res.data;\n      });\n    },\n    //.* 视频数据 */\n    // 获取视频详情数据\n    getVideoDetailBy() {\n      getVideoDetail(this.id).then(res => {\n        this.videoinfo = res.data.data;\n      });\n    },\n    // 获取相关视频\n    getSimiVideoBy() {\n      getSimiVideo(this.id).then(res => {\n        this.similarvideo = res.data.data;\n      });\n    },\n    //  获取视频播放地址\n    getVideoUrlBy() {\n      getVideoUrl(this.id).then(res => {\n        this.videoUrl = res.data.urls[0].url;\n      });\n    },\n    // 获取视频点赞数据\n    getVideoLikeInfoBy() {\n      getVideoLikeInfo(this.id).then(res => {\n        this.isLikeInfo = res.data;\n        console.log(res);\n      });\n    },\n    /* \n      事件监听\n      */\n    //评论分页事件\n    changePage() {\n      // 返回指定位置\n      let view = document.querySelector(\".view\");\n      view.scrollTop = this.$refs.comment.offsetTop;\n    },\n    /* 收藏视频或MV事件 */\n    // 获取收藏的视频\n    getSubMvBy() {\n      getSubMv().then(res => {\n        this.$store.dispatch(\"saveFavoriteMv\", res.data.data);\n        this.isSubMv();\n      });\n    },\n    // 判断是否收藏了当前视频\n    isSubMv() {\n      let index = this.subMvlist.findIndex(item => {\n        return item.vid == this.id;\n      });\n      if (index == -1) {\n        this.isSub = false;\n      } else {\n        this.isSub = true;\n      }\n    },\n    // 点击收藏按钮的回调\n    subMvBy() {\n      let t = !this.isSub ? 1 : 2; // 1 为收藏,其他为取消收藏\n      if (this.type == \"mv\") {\n        subMv(t, this.id).then(res => {\n          if (res.data.code == 200) {\n            // 从新请求最新数据\n            this.getSubMvBy();\n          }\n        });\n      } else {\n        subVideo(t, this.id).then(res => {\n          if (res.data.code == 200) {\n            this.getSubMvBy();\n          }\n        });\n      }\n    },\n    // 点击点赞按钮的回调\n    likeVideoBy() {\n      let t = !this.isLikeInfo.liked ? 1 : 2; // 1 为点赞,其他为取消点赞\n      if (this.type == \"mv\") {\n        let type = 1; // 1: mv 5: 视频\n        likeVideo(t, type, this.id).then(res => {\n          this.isLikeInfo.liked = !this.isLikeInfo.liked;\n          console.log(res);\n        });\n      } else {\n        let type = 5; // 1: mv 5: 视频\n        likeVideo(t, type, this.id).then(res => {\n          this.isLikeInfo.liked = !this.isLikeInfo.liked;\n          console.log(res);\n        });\n      }\n    }\n  },\n  watch: {\n    // 点击相关推荐视频时\n    // 路由push相同地址不同参数时 不会自动刷新页面，这里通过watch监听路由变化，一但发生变化reload刷新\n    $route(to, from) {\n      if (to !== from) {\n        this.reload();\n      }\n    }\n  }\n};","map":{"version":3,"names":["getMvDetail","getSimiMv","getMvUrl","subMv","getMvLikeInfo","getVideoDetail","getSimiVideo","getVideoUrl","subVideo","likeVideo","getVideoLikeInfo","getSubMv","mapGetters","Videoinfo","CommentPage","Similarvideo","inject","name","components","data","id","type","videoinfo","similarvideo","mvUrl","videoUrl","isSub","isLikeInfo","commentType","Number","computed","created","document","querySelector","scrollTop","$route","params","getMvDetailBy","getSimiMvBy","getMvUrlBy","getMvLikeInfoBy","getVideoDetailBy","getSimiVideoBy","getVideoUrlBy","getVideoLikeInfoBy","subMvlist","length","getSubMvBy","isSubMv","methods","then","res","mvs","url","urls","console","log","changePage","view","$refs","comment","offsetTop","$store","dispatch","index","findIndex","item","vid","subMvBy","t","code","likeVideoBy","liked","watch","to","from","reload"],"sources":["src/views/videodetail/VideoDetail.vue"],"sourcesContent":["<template>\n\t<div class=\"video-detail w\">\n\t\t<div class=\"left-detail\">\n\t\t\t<h2 style=\"padding-bottom: 15px\" v-if=\"$route.params.type == 'mv'\">MV详情</h2>\n\t\t\t<h2 style=\"padding-bottom: 15px\" v-else>视频详情</h2>\n\t\t\t<!-- 视频播放器 -->\n\t\t\t<div class=\"video-play\">\n\t\t\t\t<video :src=\"mvUrl || videoUrl\" controls=\"controls\" autoplay=\"autoplay\" loop=\"loop\"></video>\n\t\t\t</div>\n\t\t\t<!-- 视频信息 -->\n\t\t\t<Videoinfo :videoinfo=\"videoinfo\" :type=\"$route.params.type\" :is-sub=\"isSub\" :islike=\"isLikeInfo.liked\" @subMvBy=\"subMvBy\" @likeVideoBy=\"likeVideoBy\" />\n\t\t\t<!-- 视频评论 -->\n\t\t\t<div class=\"video-comment\" ref=\"comment\">\n\t\t\t\t<h3 style=\"padding-bottom: 5px\">评论</h3>\n\t\t\t\t<CommentPage :comment-type=\"commentType\" :commentres-id=\"id\" @changePage=\"changePage\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- 右侧相关视频推荐 -->\n\t\t<div class=\"right-recvideo\">\n\t\t\t<Similarvideo :similarvideo=\"similarvideo\" :type=\"$route.params.type\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n/* 网络请求 */\nimport {\n\t/* MV */\n\tgetMvDetail,\n\tgetSimiMv,\n\tgetMvUrl,\n\tsubMv,\n\tgetMvLikeInfo,\n\t/* 视频 */\n\tgetVideoDetail,\n\tgetSimiVideo,\n\tgetVideoUrl,\n\tsubVideo,\n\tlikeVideo,\n\tgetVideoLikeInfo,\n} from \"../../../network/recvideo/recvideo\";\nimport { getSubMv } from \"../../../network/myfavorite/myfavorite\";\n/* vuex */\nimport { mapGetters } from \"vuex\";\n/* 子组件 */\nimport Videoinfo from \"./Childcomps/Videoinfo.vue\";\nimport CommentPage from \"../../components/content/comment/commentPage.vue\";\nimport Similarvideo from \"./Childcomps/Similarvideo.vue\";\nexport default {\n\tinject: [\"reload\"],\n\tname: \"VideoDetail\",\n\tcomponents: { Videoinfo, CommentPage, Similarvideo },\n\tdata() {\n\t\treturn {\n\t\t\tid: \"\",\n\t\t\ttype: \"\",\n\t\t\tvideoinfo: {}, //视频信息\n\t\t\tsimilarvideo: [], //相似视频\n\t\t\tmvUrl: \"\",\n\t\t\tvideoUrl: \"\",\n\t\t\tisSub: false, //是否收藏了该视频\n\t\t\tisLikeInfo: {}, //是否点赞的信息\n\t\t\tcommentType: Number, //评论类型\n\t\t};\n\t},\n\tcomputed: {\n\t\t...mapGetters([\"subMvlist\"]),\n\t},\n\tcreated() {\n\t\tdocument.querySelector(\".view\").scrollTop = 0;\n\t\t// 保存路由传过来的id\n\t\tthis.id = this.$route.params.id;\n\t\t// 视频类型\n\t\tthis.type = this.$route.params.type;\n\t\tif (this.type == \"mv\") {\n\t\t\tthis.commentType = 1; //评论类型是mv\n\t\t\t//.* MV数据 */\n\t\t\t// 获取MV详情数据\n\t\t\tthis.getMvDetailBy();\n\t\t\t// 获取相似mv\n\t\t\tthis.getSimiMvBy();\n\t\t\t// 获取mv播放地址\n\t\t\tthis.getMvUrlBy();\n\t\t\t// 获取mv点赞数据\n\t\t\tthis.getMvLikeInfoBy();\n\t\t} else if (this.type == \"video\") {\n\t\t\tthis.commentType = 5; //评论类型是视频\n\t\t\t//.* 视频数据 */\n\t\t\t// 获取视频详情数据\n\t\t\tthis.getVideoDetailBy();\n\t\t\t// 获取相关视频\n\t\t\tthis.getSimiVideoBy();\n\t\t\t//  获取视频播放地址\n\t\t\tthis.getVideoUrlBy();\n\t\t\t// 获取视频点赞数据\n\t\t\tthis.getVideoLikeInfoBy();\n\t\t}\n\t\t// 获取收藏的视频MV列表\n\t\tif (this.subMvlist.length == 0) {\n\t\t\tthis.getSubMvBy();\n\t\t}\n\t\t// 判断是否收藏了当前MV或视频\n\t\tthis.isSubMv();\n\t},\n\n\tmethods: {\n\t\t/* \n    网络请求事件\n    */\n\t\t//.* MV数据 */\n\t\t// 获取MV详情数据\n\t\tgetMvDetailBy() {\n\t\t\tgetMvDetail(this.id).then(res => {\n\t\t\t\tthis.videoinfo = res.data.data;\n\t\t\t});\n\t\t},\n\t\t// 获取相似mv\n\t\tgetSimiMvBy() {\n\t\t\tgetSimiMv(this.id).then(res => {\n\t\t\t\tthis.similarvideo = res.data.mvs;\n\t\t\t});\n\t\t},\n\t\t// 获取mv播放地址\n\t\tgetMvUrlBy() {\n\t\t\tgetMvUrl(this.id).then(res => {\n\t\t\t\tthis.mvUrl = res.data.data.url;\n\t\t\t});\n\t\t},\n\t\t// 获取mv点赞数据\n\t\tgetMvLikeInfoBy() {\n\t\t\tgetMvLikeInfo(this.id).then(res => {\n\t\t\t\tthis.isLikeInfo = res.data;\n\t\t\t});\n\t\t},\n\n\t\t//.* 视频数据 */\n\t\t// 获取视频详情数据\n\t\tgetVideoDetailBy() {\n\t\t\tgetVideoDetail(this.id).then(res => {\n\t\t\t\tthis.videoinfo = res.data.data;\n\t\t\t});\n\t\t},\n\t\t// 获取相关视频\n\t\tgetSimiVideoBy() {\n\t\t\tgetSimiVideo(this.id).then(res => {\n\t\t\t\tthis.similarvideo = res.data.data;\n\t\t\t});\n\t\t},\n\t\t//  获取视频播放地址\n\t\tgetVideoUrlBy() {\n\t\t\tgetVideoUrl(this.id).then(res => {\n\t\t\t\tthis.videoUrl = res.data.urls[0].url;\n\t\t\t});\n\t\t},\n\t\t// 获取视频点赞数据\n\t\tgetVideoLikeInfoBy() {\n\t\t\tgetVideoLikeInfo(this.id).then(res => {\n\t\t\t\tthis.isLikeInfo = res.data;\n\t\t\t\tconsole.log(res);\n\t\t\t});\n\t\t},\n\n\t\t/* \n    事件监听\n    */\n\t\t//评论分页事件\n\t\tchangePage() {\n\t\t\t// 返回指定位置\n\t\t\tlet view = document.querySelector(\".view\");\n\t\t\tview.scrollTop = this.$refs.comment.offsetTop;\n\t\t},\n\n\t\t/* 收藏视频或MV事件 */\n\t\t// 获取收藏的视频\n\t\tgetSubMvBy() {\n\t\t\tgetSubMv().then(res => {\n\t\t\t\tthis.$store.dispatch(\"saveFavoriteMv\", res.data.data);\n\t\t\t\tthis.isSubMv();\n\t\t\t});\n\t\t},\n\t\t// 判断是否收藏了当前视频\n\t\tisSubMv() {\n\t\t\tlet index = this.subMvlist.findIndex(item => {\n\t\t\t\treturn item.vid == this.id;\n\t\t\t});\n\t\t\tif (index == -1) {\n\t\t\t\tthis.isSub = false;\n\t\t\t} else {\n\t\t\t\tthis.isSub = true;\n\t\t\t}\n\t\t},\n\n\t\t// 点击收藏按钮的回调\n\t\tsubMvBy() {\n\t\t\tlet t = !this.isSub ? 1 : 2; // 1 为收藏,其他为取消收藏\n\t\t\tif (this.type == \"mv\") {\n\t\t\t\tsubMv(t, this.id).then(res => {\n\t\t\t\t\tif (res.data.code == 200) {\n\t\t\t\t\t\t// 从新请求最新数据\n\t\t\t\t\t\tthis.getSubMvBy();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsubVideo(t, this.id).then(res => {\n\t\t\t\t\tif (res.data.code == 200) {\n\t\t\t\t\t\tthis.getSubMvBy();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t// 点击点赞按钮的回调\n\t\tlikeVideoBy() {\n\t\t\tlet t = !this.isLikeInfo.liked ? 1 : 2; // 1 为点赞,其他为取消点赞\n\t\t\tif (this.type == \"mv\") {\n\t\t\t\tlet type = 1; // 1: mv 5: 视频\n\t\t\t\tlikeVideo(t, type, this.id).then(res => {\n\t\t\t\t\tthis.isLikeInfo.liked = !this.isLikeInfo.liked;\n\t\t\t\t\tconsole.log(res)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet type = 5; // 1: mv 5: 视频\n\t\t\t\tlikeVideo(t, type, this.id).then(res => {\n\t\t\t\t\tthis.isLikeInfo.liked = !this.isLikeInfo.liked;\n\t\t\t\t\tconsole.log(res)\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\t// 点击相关推荐视频时\n\t\t// 路由push相同地址不同参数时 不会自动刷新页面，这里通过watch监听路由变化，一但发生变化reload刷新\n\t\t$route(to, from) {\n\t\t\tif (to !== from) {\n\t\t\t\tthis.reload();\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.video-detail {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\t.left-detail {\n\t\tposition: relative;\n\t\twidth: 60%;\n\t\t.video-play {\n\t\t\tbackground: #000;\n\t\t\tvideo {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 400px;\n\t\t\t}\n\t\t}\n\t\t.video-comment {\n\t\t\tpadding-top: 20px;\n\t\t}\n\t}\n\t.right-recvideo {\n\t\twidth: 35%;\n\t}\n}\n</style>\n"],"mappings":"AAyBA;AACA,SACA;AACAA,WAAA,EACAC,SAAA,EACAC,QAAA,EACAC,KAAA,EACAC,aAAA,EACA;AACAC,cAAA,EACAC,YAAA,EACAC,WAAA,EACAC,QAAA,EACAC,SAAA,EACAC,gBAAA,QACA;AACA,SAAAC,QAAA;AACA;AACA,SAAAC,UAAA;AACA;AACA,OAAAC,SAAA;AACA,OAAAC,WAAA;AACA,OAAAC,YAAA;AACA;EACAC,MAAA;EACAC,IAAA;EACAC,UAAA;IAAAL,SAAA;IAAAC,WAAA;IAAAC;EAAA;EACAI,KAAA;IACA;MACAC,EAAA;MACAC,IAAA;MACAC,SAAA;MAAA;MACAC,YAAA;MAAA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;MAAA;MACAC,UAAA;MAAA;MACAC,WAAA,EAAAC,MAAA;IACA;EACA;;EACAC,QAAA;IACA,GAAAlB,UAAA;EACA;EACAmB,QAAA;IACAC,QAAA,CAAAC,aAAA,UAAAC,SAAA;IACA;IACA,KAAAd,EAAA,QAAAe,MAAA,CAAAC,MAAA,CAAAhB,EAAA;IACA;IACA,KAAAC,IAAA,QAAAc,MAAA,CAAAC,MAAA,CAAAf,IAAA;IACA,SAAAA,IAAA;MACA,KAAAO,WAAA;MACA;MACA;MACA,KAAAS,aAAA;MACA;MACA,KAAAC,WAAA;MACA;MACA,KAAAC,UAAA;MACA;MACA,KAAAC,eAAA;IACA,gBAAAnB,IAAA;MACA,KAAAO,WAAA;MACA;MACA;MACA,KAAAa,gBAAA;MACA;MACA,KAAAC,cAAA;MACA;MACA,KAAAC,aAAA;MACA;MACA,KAAAC,kBAAA;IACA;IACA;IACA,SAAAC,SAAA,CAAAC,MAAA;MACA,KAAAC,UAAA;IACA;IACA;IACA,KAAAC,OAAA;EACA;EAEAC,OAAA;IACA;AACA;AACA;IACA;IACA;IACAZ,cAAA;MACArC,WAAA,MAAAoB,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA7B,SAAA,GAAA6B,GAAA,CAAAhC,IAAA,CAAAA,IAAA;MACA;IACA;IACA;IACAmB,YAAA;MACArC,SAAA,MAAAmB,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA5B,YAAA,GAAA4B,GAAA,CAAAhC,IAAA,CAAAiC,GAAA;MACA;IACA;IACA;IACAb,WAAA;MACArC,QAAA,MAAAkB,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA3B,KAAA,GAAA2B,GAAA,CAAAhC,IAAA,CAAAA,IAAA,CAAAkC,GAAA;MACA;IACA;IACA;IACAb,gBAAA;MACApC,aAAA,MAAAgB,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAAxB,UAAA,GAAAwB,GAAA,CAAAhC,IAAA;MACA;IACA;IAEA;IACA;IACAsB,iBAAA;MACApC,cAAA,MAAAe,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA7B,SAAA,GAAA6B,GAAA,CAAAhC,IAAA,CAAAA,IAAA;MACA;IACA;IACA;IACAuB,eAAA;MACApC,YAAA,MAAAc,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA5B,YAAA,GAAA4B,GAAA,CAAAhC,IAAA,CAAAA,IAAA;MACA;IACA;IACA;IACAwB,cAAA;MACApC,WAAA,MAAAa,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA1B,QAAA,GAAA0B,GAAA,CAAAhC,IAAA,CAAAmC,IAAA,IAAAD,GAAA;MACA;IACA;IACA;IACAT,mBAAA;MACAlC,gBAAA,MAAAU,EAAA,EAAA8B,IAAA,CAAAC,GAAA;QACA,KAAAxB,UAAA,GAAAwB,GAAA,CAAAhC,IAAA;QACAoC,OAAA,CAAAC,GAAA,CAAAL,GAAA;MACA;IACA;IAEA;AACA;AACA;IACA;IACAM,WAAA;MACA;MACA,IAAAC,IAAA,GAAA1B,QAAA,CAAAC,aAAA;MACAyB,IAAA,CAAAxB,SAAA,QAAAyB,KAAA,CAAAC,OAAA,CAAAC,SAAA;IACA;IAEA;IACA;IACAd,WAAA;MACApC,QAAA,GAAAuC,IAAA,CAAAC,GAAA;QACA,KAAAW,MAAA,CAAAC,QAAA,mBAAAZ,GAAA,CAAAhC,IAAA,CAAAA,IAAA;QACA,KAAA6B,OAAA;MACA;IACA;IACA;IACAA,QAAA;MACA,IAAAgB,KAAA,QAAAnB,SAAA,CAAAoB,SAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAC,GAAA,SAAA/C,EAAA;MACA;MACA,IAAA4C,KAAA;QACA,KAAAtC,KAAA;MACA;QACA,KAAAA,KAAA;MACA;IACA;IAEA;IACA0C,QAAA;MACA,IAAAC,CAAA,SAAA3C,KAAA;MACA,SAAAL,IAAA;QACAlB,KAAA,CAAAkE,CAAA,OAAAjD,EAAA,EAAA8B,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAhC,IAAA,CAAAmD,IAAA;YACA;YACA,KAAAvB,UAAA;UACA;QACA;MACA;QACAvC,QAAA,CAAA6D,CAAA,OAAAjD,EAAA,EAAA8B,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAhC,IAAA,CAAAmD,IAAA;YACA,KAAAvB,UAAA;UACA;QACA;MACA;IACA;IAEA;IACAwB,YAAA;MACA,IAAAF,CAAA,SAAA1C,UAAA,CAAA6C,KAAA;MACA,SAAAnD,IAAA;QACA,IAAAA,IAAA;QACAZ,SAAA,CAAA4D,CAAA,EAAAhD,IAAA,OAAAD,EAAA,EAAA8B,IAAA,CAAAC,GAAA;UACA,KAAAxB,UAAA,CAAA6C,KAAA,SAAA7C,UAAA,CAAA6C,KAAA;UACAjB,OAAA,CAAAC,GAAA,CAAAL,GAAA;QACA;MACA;QACA,IAAA9B,IAAA;QACAZ,SAAA,CAAA4D,CAAA,EAAAhD,IAAA,OAAAD,EAAA,EAAA8B,IAAA,CAAAC,GAAA;UACA,KAAAxB,UAAA,CAAA6C,KAAA,SAAA7C,UAAA,CAAA6C,KAAA;UACAjB,OAAA,CAAAC,GAAA,CAAAL,GAAA;QACA;MACA;IACA;EACA;EACAsB,KAAA;IACA;IACA;IACAtC,OAAAuC,EAAA,EAAAC,IAAA;MACA,IAAAD,EAAA,KAAAC,IAAA;QACA,KAAAC,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}