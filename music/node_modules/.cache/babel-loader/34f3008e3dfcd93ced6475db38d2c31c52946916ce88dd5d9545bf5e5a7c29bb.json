{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* 网络请求 */\nimport { geAllVideoTags, geHotVideoTags, getGroupVideoList } from \"../../../../network/recvideo/recvideo\";\n/* 子组件 */\nimport TagsNav from \"../../../components/content/TagsNav.vue\";\nimport VideoList from \"../../../components/content/videolist/VideoList.vue\";\nexport default {\n  name: \"app_Video\",\n  components: {\n    TagsNav,\n    VideoList\n  },\n  data() {\n    return {\n      allTag: [],\n      hotTag: [],\n      videoList: [{}],\n      tagId: \"\",\n      //标签id\n      offset: 0\n    };\n  },\n  created() {\n    if (!this.$store.state.isLogin) {\n      this.$message({\n        type: \"warning\",\n        message: \"登录后才能查看\",\n        showClose: true,\n        center: true\n      });\n      return;\n    }\n    // 获取全部视频标签\n    this.geAllVideoTagsBy();\n    //获取热门视频标签\n    this.geHotVideoTagsBy();\n  },\n  methods: {\n    /*\n      网络请求事件\n      */\n    // 获取全部视频标签\n    geAllVideoTagsBy() {\n      geAllVideoTags().then(res => {\n        this.allTag = res.data.data;\n      });\n    },\n    //获取热门视频标签\n    geHotVideoTagsBy() {\n      geHotVideoTags().then(res => {\n        this.hotTag = res.data.data;\n        this.tagId = this.hotTag[0].id;\n        // 默认获取 现场 分类视频列表\n        this.getGroupVideoListBy(this.tagId);\n      });\n    },\n    //  获取分类视频列表\n    getGroupVideoListBy(id) {\n      getGroupVideoList(id, this.offset).then(res => {\n        if (res.data.hasmore) {\n          this.videoList.push(...res.data.datas);\n          this.offset += 1;\n          if (this.offset < 4) {\n            this.getGroupVideoListBy(this.tagId);\n          }\n        }\n      });\n    },\n    /*\n      事件监听\n      */\n    // 标签点击事件\n    tagClick(tagName, id) {\n      this.offset = 0;\n      this.videoList = []; //清空视频列表\n      this.tagId = id; //保存标签id\n      this.getGroupVideoListBy(id);\n    },\n    more() {\n      let view = document.querySelector(\".view\");\n      if (Math.ceil(view.scrollTop) + view.clientHeight >= view.scrollHeight) {\n        //滚动卷去的高度+当前可视高度 >=总高度 即代表滑动到底部\n        this.getGroupVideoListBy(this.tagId);\n      }\n    }\n  },\n  activated() {\n    document.querySelector(\".view\").addEventListener(\"scroll\", this.more);\n  },\n  deactivated() {\n    document.querySelector(\".view\").removeEventListener(\"scroll\", this.more);\n  }\n};","map":{"version":3,"names":["geAllVideoTags","geHotVideoTags","getGroupVideoList","TagsNav","VideoList","name","components","data","allTag","hotTag","videoList","tagId","offset","created","$store","state","isLogin","$message","type","message","showClose","center","geAllVideoTagsBy","geHotVideoTagsBy","methods","then","res","id","getGroupVideoListBy","hasmore","push","datas","tagClick","tagName","more","view","document","querySelector","Math","ceil","scrollTop","clientHeight","scrollHeight","activated","addEventListener","deactivated","removeEventListener"],"sources":["src/views/recvideo/Childcomps/Video.vue"],"sourcesContent":["<template>\n\t<div class=\"video\">\n\t\t<div class=\"logined\" v-if=\"$store.state.isLogin\">\n\t\t\t<!-- 标签导航 -->\n\t\t\t<TagsNav :all-tag=\"allTag\" :hot-tag=\"hotTag\" @tagClick=\"tagClick\" />\n\t\t\t<!-- 视频列表 -->\n\t\t\t<div class=\"video-list\" v-if=\"videoList.length != 0\">\n\t\t\t\t<VideoList :videolist=\"videoList\" />\n\t\t\t</div>\n\t\t\t<div class=\"novideo\" v-else>\n\t\t\t\t<el-empty description=\"暂无视频\" :image-size=\"200\"></el-empty>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"nologin\" v-if=\"!$store.state.isLogin\">\n\t\t\t<el-empty description=\"登录后才能查看\" :image-size=\"200\"></el-empty>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n/* 网络请求 */\nimport { geAllVideoTags, geHotVideoTags, getGroupVideoList } from \"../../../../network/recvideo/recvideo\";\n/* 子组件 */\nimport TagsNav from \"../../../components/content/TagsNav.vue\";\nimport VideoList from \"../../../components/content/videolist/VideoList.vue\";\nexport default {\n\tname: \"app_Video\",\n\tcomponents: { TagsNav, VideoList },\n\tdata() {\n\t\treturn {\n\t\t\tallTag: [],\n\t\t\thotTag: [],\n\t\t\tvideoList: [{}],\n\t\t\ttagId: \"\", //标签id\n\t\t\toffset: 0,\n\t\t};\n\t},\n\tcreated() {\n\t\tif (!this.$store.state.isLogin) {\n\t\t\tthis.$message({\n\t\t\t\ttype: \"warning\",\n\t\t\t\tmessage: \"登录后才能查看\",\n\t\t\t\tshowClose: true,\n\t\t\t\tcenter: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// 获取全部视频标签\n\t\tthis.geAllVideoTagsBy();\n\t\t//获取热门视频标签\n\t\tthis.geHotVideoTagsBy();\n\t},\n\tmethods: {\n\t\t/*\n    网络请求事件\n    */\n\t\t// 获取全部视频标签\n\t\tgeAllVideoTagsBy() {\n\t\t\tgeAllVideoTags().then(res => {\n\t\t\t\tthis.allTag = res.data.data;\n\t\t\t});\n\t\t},\n\t\t//获取热门视频标签\n\t\tgeHotVideoTagsBy() {\n\t\t\tgeHotVideoTags().then(res => {\n\t\t\t\tthis.hotTag = res.data.data;\n\t\t\t\tthis.tagId = this.hotTag[0].id;\n\t\t\t\t// 默认获取 现场 分类视频列表\n\t\t\t\tthis.getGroupVideoListBy(this.tagId);\n\t\t\t});\n\t\t},\n\t\t//  获取分类视频列表\n\t\tgetGroupVideoListBy(id) {\n\t\t\tgetGroupVideoList(id, this.offset).then(res => {\n\t\t\t\tif (res.data.hasmore) {\n\t\t\t\t\tthis.videoList.push(...res.data.datas);\n\t\t\t\t\tthis.offset += 1;\n\t\t\t\t\tif (this.offset < 4) {\n\t\t\t\t\t\tthis.getGroupVideoListBy(this.tagId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t/*\n    事件监听\n    */\n\t\t// 标签点击事件\n\t\ttagClick(tagName, id) {\n\t\t\tthis.offset = 0;\n\t\t\tthis.videoList = []; //清空视频列表\n\t\t\tthis.tagId = id; //保存标签id\n\t\t\tthis.getGroupVideoListBy(id);\n\t\t},\n\t\tmore() {\n\t\t\tlet view = document.querySelector(\".view\");\n\t\t\tif (Math.ceil(view.scrollTop) + view.clientHeight >= view.scrollHeight) {\n\t\t\t\t//滚动卷去的高度+当前可视高度 >=总高度 即代表滑动到底部\n\t\t\t\tthis.getGroupVideoListBy(this.tagId);\n\t\t\t}\n\t\t},\n\t},\n\n\tactivated() {\n\t\tdocument.querySelector(\".view\").addEventListener(\"scroll\", this.more);\n\t},\n\tdeactivated() {\n\t\tdocument.querySelector(\".view\").removeEventListener(\"scroll\", this.more);\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.video-list {\n\tmargin-top: 30px;\n}\n</style>\n"],"mappings":";AAoBA;AACA,SAAAA,cAAA,EAAAC,cAAA,EAAAC,iBAAA;AACA;AACA,OAAAC,OAAA;AACA,OAAAC,SAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAH,OAAA;IAAAC;EAAA;EACAG,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MACAC,SAAA;MACAC,KAAA;MAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,UAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAC,QAAA;QACAC,IAAA;QACAC,OAAA;QACAC,SAAA;QACAC,MAAA;MACA;MACA;IACA;IACA;IACA,KAAAC,gBAAA;IACA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACA;AACA;AACA;IACA;IACAF,iBAAA;MACAtB,cAAA,GAAAyB,IAAA,CAAAC,GAAA;QACA,KAAAlB,MAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAA,IAAA;MACA;IACA;IACA;IACAgB,iBAAA;MACAtB,cAAA,GAAAwB,IAAA,CAAAC,GAAA;QACA,KAAAjB,MAAA,GAAAiB,GAAA,CAAAnB,IAAA,CAAAA,IAAA;QACA,KAAAI,KAAA,QAAAF,MAAA,IAAAkB,EAAA;QACA;QACA,KAAAC,mBAAA,MAAAjB,KAAA;MACA;IACA;IACA;IACAiB,oBAAAD,EAAA;MACAzB,iBAAA,CAAAyB,EAAA,OAAAf,MAAA,EAAAa,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAnB,IAAA,CAAAsB,OAAA;UACA,KAAAnB,SAAA,CAAAoB,IAAA,IAAAJ,GAAA,CAAAnB,IAAA,CAAAwB,KAAA;UACA,KAAAnB,MAAA;UACA,SAAAA,MAAA;YACA,KAAAgB,mBAAA,MAAAjB,KAAA;UACA;QACA;MACA;IACA;IAEA;AACA;AACA;IACA;IACAqB,SAAAC,OAAA,EAAAN,EAAA;MACA,KAAAf,MAAA;MACA,KAAAF,SAAA;MACA,KAAAC,KAAA,GAAAgB,EAAA;MACA,KAAAC,mBAAA,CAAAD,EAAA;IACA;IACAO,KAAA;MACA,IAAAC,IAAA,GAAAC,QAAA,CAAAC,aAAA;MACA,IAAAC,IAAA,CAAAC,IAAA,CAAAJ,IAAA,CAAAK,SAAA,IAAAL,IAAA,CAAAM,YAAA,IAAAN,IAAA,CAAAO,YAAA;QACA;QACA,KAAAd,mBAAA,MAAAjB,KAAA;MACA;IACA;EACA;EAEAgC,UAAA;IACAP,QAAA,CAAAC,aAAA,UAAAO,gBAAA,gBAAAV,IAAA;EACA;EACAW,YAAA;IACAT,QAAA,CAAAC,aAAA,UAAAS,mBAAA,gBAAAZ,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}