{"ast":null,"code":"import { formatDate } from \"../../../common/formatDate\";\nexport default {\n  name: \"AlbumTopInfo\",\n  props: {\n    dynamic: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    albuminfo: {\n      type: Object,\n      default() {\n        return {};\n      }\n    },\n    isSub: {\n      type: Boolean,\n      default() {\n        return false;\n      }\n    }\n  },\n  computed: {\n    cover() {\n      return this.albuminfo.picUrl + \"?param=200y200\";\n    }\n  },\n  filters: {\n    showDate(value) {\n      const date = new Date(value);\n      return formatDate(date, \"yyyy-MM-dd\");\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    // 播放所有歌曲\n    playAll() {\n      this.$emit(\"playAllSong\");\n    },\n    // 收藏专辑\n    subAlbumBy() {\n      // 先判断登录状态\n      if (!this.$store.state.isLogin) {\n        this.$message({\n          type: \"warning\",\n          message: \"登录后才能收藏\",\n          showClose: true,\n          center: true\n        });\n        return;\n      }\n      this.$emit(\"subAlbumBy\");\n    }\n  }\n};","map":{"version":3,"names":["formatDate","name","props","dynamic","type","Object","default","albuminfo","isSub","Boolean","computed","cover","picUrl","filters","showDate","value","date","Date","data","methods","playAll","$emit","subAlbumBy","$store","state","isLogin","$message","message","showClose","center"],"sources":["src/views/zhuanjidetail/Childcomps/AlbumTopInfo.vue"],"sourcesContent":["<template>\n\t<div class=\"top-desc\" v-if=\"Object.keys(albuminfo).length !== 0\">\n\t\t<!-- 左侧图片 -->\n\t\t<div class=\"left-img\">\n\t\t\t<img v-lazy=\"cover\" alt=\"\" />\n\t\t</div>\n\t\t<!-- 右侧描述 -->\n\t\t<div class=\"right-desc\">\n\t\t\t<!-- 专辑标题 -->\n\t\t\t<div class=\"title\">\n\t\t\t\t<el-tag effect=\"plain\" class=\"stag\">专辑</el-tag>\n\t\t\t\t<h2>{{ albuminfo.name }}</h2>\n\t\t\t</div>\n\t\t\t<!-- 相关操作 -->\n\t\t\t<div class=\"operation\">\n\t\t\t\t<el-button type=\"primary\" icon=\"el-icon-video-play\" @click=\"playAll\">播放全部</el-button>\n\t\t\t\t<el-button :icon=\"isSub ? 'el-icon-folder-checked' : 'el-icon-folder-add'\" :type=\"isSub ? 'primary' : 'default'\" @click=\"subAlbumBy\">{{ isSub ? \"已收藏\" : \"收藏\" }}</el-button>\n\t\t\t\t<el-button icon=\"el-icon-share\">分享({{ dynamic.shareCount }})</el-button>\n\t\t\t</div>\n\t\t\t<!-- 相关信息 -->\n\t\t\t<div class=\"base-info\">\n\t\t\t\t<div>歌手：{{ albuminfo.artist.name }}</div>\n\t\t\t\t<div>歌曲数：{{ albuminfo.size }}</div>\n\t\t\t\t<div v-if=\"albuminfo.company\">出品公司：{{ albuminfo.company }}</div>\n\t\t\t\t<div>发行时间：{{ albuminfo.publishTime | showDate }}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport { formatDate } from \"../../../common/formatDate\";\nexport default {\n\tname: \"AlbumTopInfo\",\n\tprops: {\n\t\tdynamic: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t},\n\t\talbuminfo: {\n\t\t\ttype: Object,\n\t\t\tdefault() {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t},\n\t\tisSub: {\n\t\t\ttype: Boolean,\n\t\t\tdefault() {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t},\n\t},\n\tcomputed: {\n\t\tcover() {\n\t\t\treturn this.albuminfo.picUrl + \"?param=200y200\";\n\t\t},\n\t},\n\tfilters: {\n\t\tshowDate(value) {\n\t\t\tconst date = new Date(value);\n\t\t\treturn formatDate(date, \"yyyy-MM-dd\");\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {};\n\t},\n\tmethods: {\n\t\t// 播放所有歌曲\n\t\tplayAll() {\n\t\t\tthis.$emit(\"playAllSong\");\n\t\t},\n\t\t// 收藏专辑\n\t\tsubAlbumBy() {\n\t\t\t// 先判断登录状态\n\t\t\tif (!this.$store.state.isLogin) {\n\t\t\t\tthis.$message({\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: \"登录后才能收藏\",\n\t\t\t\t\tshowClose: true,\n\t\t\t\t\tcenter: true,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.$emit(\"subAlbumBy\");\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.top-desc {\n\tdisplay: flex;\n\talign-items: center;\n\t.left-img {\n\t\tflex: 1;\n\t\timg {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t.right-desc {\n\t\tflex: 4;\n\t\tpadding-left: 15px;\n\t\t.title {\n\t\t\tdisplay: flex;\n\t\t\t.stag {\n\t\t\t\theight: 30px;\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-weight: 700;\n\t\t\t}\n\t\t\th2 {\n\t\t\t\tpadding-left: 15px;\n\t\t\t\tfont-size: 22px;\n\t\t\t}\n\t\t}\n\t\t.operation {\n\t\t\tmargin-top: 15px;\n\t\t}\n\t\t.base-info {\n\t\t\tmargin-top: 15px;\n\t\t\tfont-size: 16px;\n\t\t\tdiv {\n\t\t\t\tpadding: 5px 0;\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n"],"mappings":"AA+BA,SAAAA,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;QACA;MACA;IACA;IACAC,SAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,QAAA;QACA;MACA;IACA;IACAE,KAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,QAAA;QACA;MACA;IACA;EACA;EACAI,QAAA;IACAC,MAAA;MACA,YAAAJ,SAAA,CAAAK,MAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAAC,KAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,KAAA;MACA,OAAAf,UAAA,CAAAgB,IAAA;IACA;EACA;EAEAE,KAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,QAAA;MACA,KAAAC,KAAA;IACA;IACA;IACAC,WAAA;MACA;MACA,UAAAC,MAAA,CAAAC,KAAA,CAAAC,OAAA;QACA,KAAAC,QAAA;UACAtB,IAAA;UACAuB,OAAA;UACAC,SAAA;UACAC,MAAA;QACA;QACA;MACA;MACA,KAAAR,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}