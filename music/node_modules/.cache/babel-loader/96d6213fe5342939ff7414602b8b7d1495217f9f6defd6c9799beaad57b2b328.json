{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nimport { getSongUrl, checkMusic } from \"../../../../network/playmusic/playmusic.js\";\nimport TabBar from \"../../../components/common/TabBar.vue\";\nexport default {\n  name: \"PlayingList\",\n  components: {\n    TabBar\n  },\n  computed: {\n    ...mapGetters([\"playingList\", \"historyPlay\", \"nowSongDetail\", \"isPlaying\"])\n  },\n  data() {\n    return {\n      tabitems: [{\n        name: \"播放列表\"\n      }, {\n        name: \"历史记录\"\n      }],\n      activeItem: 0\n    };\n  },\n  filters: {\n    formatIndex(index) {\n      if (index < 9) {\n        return \"0\" + (index + 1);\n      } else return index + 1;\n    }\n  },\n  methods: {\n    // 顶部tab点击切换\n    tabItemClick(index) {\n      this.activeItem = index;\n    },\n    // 播放列表双击播放歌曲\n    playSongClick(song) {\n      checkMusic(song.id).then(res => {\n        // 获取歌曲url\n        getSongUrl(song.id).then(res => {\n          this.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\n        });\n        // 更新播放状态\n        this.$store.dispatch(\"changePlayState\", true);\n        //提交vuex保存当前歌曲详情\n        this.$store.dispatch(\"saveSongDetail\", song);\n        console.log(res.data);\n      }).catch(err => {\n        this.$message({\n          message: \"暂时无法播放，换首试试\",\n          type: \"warning\",\n          center: true\n        });\n        this.$store.dispatch(\"deleteSong\", song.id);\n        console.log(err);\n      });\n    },\n    // 删除播放列表单曲\n    deleteSong(song) {\n      this.$store.dispatch(\"deleteSong\", song.id);\n    },\n    // 清空播放列表\n    deleteAll() {\n      this.$store.dispatch(\"deleteAll\");\n      this.$store.dispatch(\"saveCurrentLyric\", []);\n    },\n    // 双击播放历史记录歌曲\n    playHistorySong(song) {\n      // 播放歌曲\n      this.playSongClick(song);\n      // 提交vuex添加到播放列表\n      this.$store.dispatch(\"addPlayinglist\", song);\n    },\n    // 清空播放历史记录\n    deleteAllHistory() {\n      this.$store.dispatch(\"deleteAllHistory\");\n    },\n    // 删除历史记录单曲\n    deleteHistory(song) {\n      this.$store.dispatch(\"deleteHistory\", song.id);\n    },\n    // 实现当前播放歌曲行显示小喇叭\n    tableRowClassName({\n      row,\n      rowIndex\n    }) {\n      row.index = rowIndex;\n      if (rowIndex % 2 !== 0) {\n        return \"rowEven\";\n      }\n    },\n    // 点击歌手 去往歌手页面\n    toSinger(id) {\n      this.$router.push(\"/singerdetail/\" + id);\n    }\n  },\n  mounted() {\n    // 点击其他区域(不包括播放器控制栏)关闭播放列表\n    let playingList = document.querySelector(\"#playing-song-list\");\n    let footer = document.querySelector(\"#footer\");\n    document.addEventListener(\"mousedown\", e => {\n      if (playingList) {\n        if (!playingList.contains(e.target) && !footer.contains(e.target)) {\n          this.$emit(\"closePlayList\");\n        }\n      }\n    });\n  }\n};","map":{"version":3,"names":["mapGetters","getSongUrl","checkMusic","TabBar","name","components","computed","data","tabitems","activeItem","filters","formatIndex","index","methods","tabItemClick","playSongClick","song","id","then","res","$store","dispatch","url","console","log","catch","err","$message","message","type","center","deleteSong","deleteAll","playHistorySong","deleteAllHistory","deleteHistory","tableRowClassName","row","rowIndex","toSinger","$router","push","mounted","playingList","document","querySelector","footer","addEventListener","e","contains","target","$emit"],"sources":["src/components/content/player/PlayingList.vue"],"sourcesContent":["<template>\n\t<div class=\"playing-list\" id=\"playing-song-list\">\n\t\t<div class=\"top-nav\">\n\t\t\t<TabBar :tabitems=\"tabitems\" @tabItemClick=\"tabItemClick\" />\n\t\t</div>\n\t\t<!-- 播放列表 -->\n\t\t<div class=\"play-list\" v-if=\"activeItem == 0\">\n\t\t\t<div class=\"hd\">\n\t\t\t\t<h4 style=\"padding: 0px 10px\">总{{ playingList.length }}首</h4>\n\t\t\t\t<span @click=\"deleteAll\"><i class=\"iconfont icon-delete\"></i>清空</span>\n\t\t\t</div>\n\t\t\t<div class=\"bd\">\n\t\t\t\t<el-table size=\"mini\" :show-header=\"false\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :data=\"playingList\" @row-dblclick=\"playSongClick\" empty-text=\"暂无歌曲\">\n\t\t\t\t\t<el-table-column width=\"50\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span class=\"iconfont\" :class=\"isPlaying ? ' icon-voice' : 'icon-jingyin_laba'\" v-if=\"scope.row.id === nowSongDetail.id\"></span>\n\t\t\t\t\t\t\t<span v-else>{{ scope.row.index | formatIndex }}</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column prop=\"name\" label=\"歌曲\" :show-overflow-tooltip=\"true\" width=\"100\"> </el-table-column>\n\t\t\t\t\t<el-table-column prop=\"ar[0].name\" label=\"歌手\" :show-overflow-tooltip=\"true\" width=\"100\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span @click=\"toSinger(scope.row.ar[0].id)\" class=\"sname\">\n\t\t\t\t\t\t\t\t{{ scope.row.ar[0].name }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column prop=\"dt\" label=\"时长\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ scope.row.dt | formatDuration }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column width=\"60\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span class=\"iconfont icon-guanbi\" @click=\"deleteSong(scope.row)\"></span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t</el-table>\n\t\t\t</div>\n\t\t</div>\n\t\t<!-- 历史记录 -->\n\t\t<div class=\"history-list\" v-if=\"activeItem == 1\">\n\t\t\t<div class=\"hd\">\n\t\t\t\t<h4 style=\"padding: 0px 10px\">总{{ historyPlay.length }}首</h4>\n\t\t\t\t<span @click=\"deleteAllHistory\" style=\"cursor: pointer\"><i class=\"iconfont icon-delete\"></i>清空</span>\n\t\t\t</div>\n\t\t\t<div class=\"bd\">\n\t\t\t\t<el-table size=\"mini\" :show-header=\"false\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\" :data=\"historyPlay\" @row-dblclick=\"playHistorySong\" empty-text=\"暂无记录\">\n\t\t\t\t\t<el-table-column width=\"50\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span class=\"iconfont\" :class=\"isPlaying ? ' icon-voice' : 'icon-jingyin_laba'\" v-if=\"scope.row.id == nowSongDetail.id\"></span>\n\t\t\t\t\t\t\t<span v-else>{{ scope.row.index | formatIndex }}</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column prop=\"name\" label=\"歌曲\" :show-overflow-tooltip=\"true\" width=\"100\"> </el-table-column>\n\t\t\t\t\t<el-table-column prop=\"ar[0].name\" label=\"歌手\" :show-overflow-tooltip=\"true\" width=\"100\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span @click=\"toSinger(scope.row.ar[0].id)\" class=\"sname\">\n\t\t\t\t\t\t\t\t{{ scope.row.ar[0].name }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column prop=\"dt\" label=\"时长\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{{ scope.row.dt | formatDuration }}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t\t<el-table-column width=\"60\">\n\t\t\t\t\t\t<template v-slot=\"scope\">\n\t\t\t\t\t\t\t<span class=\"iconfont icon-guanbi\" @click=\"deleteHistory(scope.row)\"></span>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</el-table-column>\n\t\t\t\t</el-table>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script >\nimport { mapGetters } from \"vuex\";\nimport { getSongUrl, checkMusic } from \"../../../../network/playmusic/playmusic.js\";\nimport TabBar from \"../../../components/common/TabBar.vue\";\nexport default {\n\tname: \"PlayingList\",\n\tcomponents: { TabBar },\n\tcomputed: {\n\t\t...mapGetters([\"playingList\", \"historyPlay\", \"nowSongDetail\", \"isPlaying\"]),\n\t},\n\tdata() {\n\t\treturn {\n\t\t\ttabitems: [{ name: \"播放列表\" }, { name: \"历史记录\" }],\n\t\t\tactiveItem: 0,\n\t\t};\n\t},\n\tfilters: {\n\t\tformatIndex(index) {\n\t\t\tif (index < 9) {\n\t\t\t\treturn \"0\" + (index + 1);\n\t\t\t} else return index + 1;\n\t\t},\n\t},\n\tmethods: {\n\t\t// 顶部tab点击切换\n\t\ttabItemClick(index) {\n\t\t\tthis.activeItem = index;\n\t\t},\n\t\t// 播放列表双击播放歌曲\n\t\tplaySongClick(song) {\n\t\t\tcheckMusic(song.id)\n\t\t\t\t.then(res => {\n\t\t\t\t\t// 获取歌曲url\n\t\t\t\t\tgetSongUrl(song.id).then(res => {\n\t\t\t\t\t\tthis.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\n\t\t\t\t\t});\n\t\t\t\t\t// 更新播放状态\n\t\t\t\t\tthis.$store.dispatch(\"changePlayState\", true);\n\t\t\t\t\t//提交vuex保存当前歌曲详情\n\t\t\t\t\tthis.$store.dispatch(\"saveSongDetail\", song);\n                    console.log(res.data)\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tthis.$message({\n\t\t\t\t\t\tmessage: \"暂时无法播放，换首试试\",\n\t\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\t\tcenter: true,\n\t\t\t\t\t});\n\t\t\t\t\tthis.$store.dispatch(\"deleteSong\", song.id);\n                    console.log(err)\n\t\t\t\t});\n\t\t},\n\t\t// 删除播放列表单曲\n\t\tdeleteSong(song) {\n\t\t\tthis.$store.dispatch(\"deleteSong\", song.id);\n\t\t},\n\t\t// 清空播放列表\n\t\tdeleteAll() {\n\t\t\tthis.$store.dispatch(\"deleteAll\");\n\t\t\tthis.$store.dispatch(\"saveCurrentLyric\", []);\n\t\t},\n\t\t// 双击播放历史记录歌曲\n\t\tplayHistorySong(song) {\n\t\t\t// 播放歌曲\n\t\t\tthis.playSongClick(song);\n\t\t\t// 提交vuex添加到播放列表\n\t\t\tthis.$store.dispatch(\"addPlayinglist\", song);\n\t\t},\n\t\t// 清空播放历史记录\n\t\tdeleteAllHistory() {\n\t\t\tthis.$store.dispatch(\"deleteAllHistory\");\n\t\t},\n\t\t// 删除历史记录单曲\n\t\tdeleteHistory(song) {\n\t\t\tthis.$store.dispatch(\"deleteHistory\", song.id);\n\t\t},\n\t\t// 实现当前播放歌曲行显示小喇叭\n\t\ttableRowClassName({ row, rowIndex }) {\n\t\t\trow.index = rowIndex;\n\t\t\tif (rowIndex % 2 !== 0) {\n\t\t\t\treturn \"rowEven\";\n\t\t\t}\n\t\t},\n\t\t// 点击歌手 去往歌手页面\n\t\ttoSinger(id) {\n\t\t\tthis.$router.push(\"/singerdetail/\" + id);\n\t\t},\n\t},\n\tmounted() {\n\t\t// 点击其他区域(不包括播放器控制栏)关闭播放列表\n\t\tlet playingList = document.querySelector(\"#playing-song-list\");\n\t\tlet footer = document.querySelector(\"#footer\");\n\t\tdocument.addEventListener(\"mousedown\", e => {\n\t\t\tif (playingList) {\n\t\t\t\tif (!playingList.contains(e.target) && !footer.contains(e.target)) {\n\t\t\t\t\tthis.$emit(\"closePlayList\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n};\n</script>\n\n<style lang=\"less\" scoped>\n.playing-list {\n\tposition: absolute;\n\tbottom: 70px;\n\tright: 0;\n\theight: calc(100vh - 130px);\n\tbackground: #fff;\n\tborder-left: 1px solid #ebebeb;\n\tbox-shadow: -3px 0px 5px 0px #eee;\n}\n.top-nav {\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\theight: 24px;\n\tmargin-top: 10px;\n}\n.hd {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 24px;\n\tmargin: 10px 0;\n\tpadding: 10px 0;\n\tborder-bottom: 1px solid #eee;\n\tspan {\n\t\tpadding-right: 30px;\n\t\tfont-size: 14px;\n\t\tcursor: pointer;\n\t\t&:hover {\n\t\t\tcolor: var(--themeColor);\n\t\t}\n\t}\n}\n.play-list,\n.history-list {\n\theight: calc(100% - 78px);\n\t.bd {\n\t\theight: 100%;\n\t\toverflow-y: scroll;\n\t\t.sname {\n\t\t\tcursor: pointer;\n\t\t\t&:hover {\n\t\t\t\tcolor: var(--themeColor);\n\t\t\t}\n\t\t}\n\t\t.icon-guanbi:hover {\n\t\t\tcolor: var(--themeColor);\n\t\t\tcursor: pointer;\n\t\t}\n\t\t.icon-voice,\n\t\t.icon-jingyin_laba {\n\t\t\tcolor: var(--themeColor);\n\t\t}\n\t}\n}\n\n::-webkit-scrollbar {\n\twidth: 5px;\n\theight: 12px;\n\tbackground-color: #fff;\n}\n</style>\n"],"mappings":";AAmFA,SAAAA,UAAA;AACA,SAAAC,UAAA,EAAAC,UAAA;AACA,OAAAC,MAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,QAAA;IACA,GAAAN,UAAA;EACA;EACAO,KAAA;IACA;MACAC,QAAA;QAAAJ,IAAA;MAAA;QAAAA,IAAA;MAAA;MACAK,UAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAC,KAAA;MACA,IAAAA,KAAA;QACA,cAAAA,KAAA;MACA,cAAAA,KAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,aAAAF,KAAA;MACA,KAAAH,UAAA,GAAAG,KAAA;IACA;IACA;IACAG,cAAAC,IAAA;MACAd,UAAA,CAAAc,IAAA,CAAAC,EAAA,EACAC,IAAA,CAAAC,GAAA;QACA;QACAlB,UAAA,CAAAe,IAAA,CAAAC,EAAA,EAAAC,IAAA,CAAAC,GAAA;UACA,KAAAC,MAAA,CAAAC,QAAA,gBAAAF,GAAA,CAAAZ,IAAA,CAAAA,IAAA,IAAAe,GAAA;QACA;QACA;QACA,KAAAF,MAAA,CAAAC,QAAA;QACA;QACA,KAAAD,MAAA,CAAAC,QAAA,mBAAAL,IAAA;QACAO,OAAA,CAAAC,GAAA,CAAAL,GAAA,CAAAZ,IAAA;MACA,GACAkB,KAAA,CAAAC,GAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACAC,IAAA;UACAC,MAAA;QACA;QACA,KAAAV,MAAA,CAAAC,QAAA,eAAAL,IAAA,CAAAC,EAAA;QACAM,OAAA,CAAAC,GAAA,CAAAE,GAAA;MACA;IACA;IACA;IACAK,WAAAf,IAAA;MACA,KAAAI,MAAA,CAAAC,QAAA,eAAAL,IAAA,CAAAC,EAAA;IACA;IACA;IACAe,UAAA;MACA,KAAAZ,MAAA,CAAAC,QAAA;MACA,KAAAD,MAAA,CAAAC,QAAA;IACA;IACA;IACAY,gBAAAjB,IAAA;MACA;MACA,KAAAD,aAAA,CAAAC,IAAA;MACA;MACA,KAAAI,MAAA,CAAAC,QAAA,mBAAAL,IAAA;IACA;IACA;IACAkB,iBAAA;MACA,KAAAd,MAAA,CAAAC,QAAA;IACA;IACA;IACAc,cAAAnB,IAAA;MACA,KAAAI,MAAA,CAAAC,QAAA,kBAAAL,IAAA,CAAAC,EAAA;IACA;IACA;IACAmB,kBAAA;MAAAC,GAAA;MAAAC;IAAA;MACAD,GAAA,CAAAzB,KAAA,GAAA0B,QAAA;MACA,IAAAA,QAAA;QACA;MACA;IACA;IACA;IACAC,SAAAtB,EAAA;MACA,KAAAuB,OAAA,CAAAC,IAAA,oBAAAxB,EAAA;IACA;EACA;EACAyB,QAAA;IACA;IACA,IAAAC,WAAA,GAAAC,QAAA,CAAAC,aAAA;IACA,IAAAC,MAAA,GAAAF,QAAA,CAAAC,aAAA;IACAD,QAAA,CAAAG,gBAAA,cAAAC,CAAA;MACA,IAAAL,WAAA;QACA,KAAAA,WAAA,CAAAM,QAAA,CAAAD,CAAA,CAAAE,MAAA,MAAAJ,MAAA,CAAAG,QAAA,CAAAD,CAAA,CAAAE,MAAA;UACA,KAAAC,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}